(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define([], factory);
	else if(typeof exports === 'object')
		exports["minnow"] = factory();
	else
		root["minnow"] = factory();
})(window, function() {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/index.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./src/Engine/Engine.js":
/*!******************************!*\
  !*** ./src/Engine/Engine.js ***!
  \******************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _Screen_Screen__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Screen/Screen */ \"./src/Screen/Screen.js\");\n/* harmony import */ var _Input_Input__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Input/Input */ \"./src/Input/Input.js\");\n/* harmony import */ var _TileData_TileData__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../TileData/TileData */ \"./src/TileData/TileData.js\");\n/* harmony import */ var _MapData_MapData__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../MapData/MapData */ \"./src/MapData/MapData.js\");\n/* harmony import */ var _FontData_FontData__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../FontData/FontData */ \"./src/FontData/FontData.js\");\n/* harmony import */ var _FontData_standard_font_json__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../FontData/standard.font.json */ \"./src/FontData/standard.font.json\");\nvar _FontData_standard_font_json__WEBPACK_IMPORTED_MODULE_5___namespace = /*#__PURE__*/__webpack_require__.t(/*! ../FontData/standard.font.json */ \"./src/FontData/standard.font.json\", 1);\n/* harmony import */ var _FontData_small_font_json__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../FontData/small.font.json */ \"./src/FontData/small.font.json\");\nvar _FontData_small_font_json__WEBPACK_IMPORTED_MODULE_6___namespace = /*#__PURE__*/__webpack_require__.t(/*! ../FontData/small.font.json */ \"./src/FontData/small.font.json\", 1);\n\n\n\n\n\n\n\n\n\nclass Engine {\n  constructor() {\n    this.containerId = 'minnow-container';\n    this.onInit = null;\n    this.onUpdate = null;\n    this.screen = new _Screen_Screen__WEBPACK_IMPORTED_MODULE_0__[\"default\"]();\n    this.input = new _Input_Input__WEBPACK_IMPORTED_MODULE_1__[\"default\"]();\n    this.tileData = new _TileData_TileData__WEBPACK_IMPORTED_MODULE_2__[\"default\"]();\n    this.mapData = new _MapData_MapData__WEBPACK_IMPORTED_MODULE_3__[\"default\"]();\n    this.fontData = new _FontData_FontData__WEBPACK_IMPORTED_MODULE_4__[\"default\"]();\n\n    this.fontData.addFont( _FontData_standard_font_json__WEBPACK_IMPORTED_MODULE_5__ );\n    this.fontData.addFont( _FontData_small_font_json__WEBPACK_IMPORTED_MODULE_6__ );\n\n    this._update = this._update.bind( this );\n  }\n\n  /**\n   * Begin running the engine. This will perform initial setup, call the onInit function, and begin the game loop\n   */\n  begin() {\n    if ( this.onInit ) {\n      this.onInit();\n    }\n\n    this.screen.init();\n    this.screen.onScaleChange = ( scale ) => {\n      this.input.canvasScale = scale;\n    };\n\n    this.input.canvas = this.screen.canvas;\n    this.input.canvasScale = this.screen.scale;\n    this.input.screenWidth = this.screen.width;\n    this.input.screenHeight = this.screen.height;\n    this.input.init();\n    this.tileData.init();\n    this.screen.tileData = this.tileData;\n    this.screen.mapData = this.mapData;\n    this.screen.fontData = this.fontData;\n\n    requestAnimationFrame( this._update );\n  }\n\n  /**\n   * Game loop\n   */\n  _update() {\n    this.input.pollInput();\n\n    if ( this.onUpdate ) {\n      this.onUpdate();\n    }\n\n    this.screen.drawScreen();\n    requestAnimationFrame( this._update );\n  }\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Engine);\n\n\n//# sourceURL=webpack://minnow/./src/Engine/Engine.js?");

/***/ }),

/***/ "./src/FontData/Font.js":
/*!******************************!*\
  !*** ./src/FontData/Font.js ***!
  \******************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n\n/**\n * Represents a font. Data is stored similarly to tilesets in an array, with the ability to remap characters\n * that have a unicode point larger than the array can hold.\n */\nclass Font {\n  constructor( fontData ) {\n    this.standardWidth = 5;\n    this.letterSpacing = 1;\n\n    this.tileSize = 16;\n    this.width = 16;\n    this.height = 16;\n    this.originX = 1;\n    this.originY = 3;\n\n    this.charData = null;\n    this.data = null;\n\n    if ( fontData ) {\n      this.standardWidth = fontData.standardWidth;\n      this.letterSpacing = fontData.letterSpacing;\n\n      this.tileSize = fontData.tileSize;\n      this.width = fontData.width;\n      this.height = fontData.height;\n      this.originX = fontData.originX;\n      this.originY = fontData.originY;\n      this.charData = fontData.charData;\n\n      this.data = new Uint8ClampedArray( this.width * this.height * this.tileSize * this.tileSize );\n      const { data } = fontData;\n      let runPosition = 0;\n      let dataPosition = 0;\n      while ( runPosition < data.length ) {\n        const runLength = data[runPosition];\n        const paletteId = parseInt( data[runPosition + 1], 10 );\n        for ( let j = 0; j < runLength; j += 1 ) {\n          this.data[dataPosition] = paletteId;\n          dataPosition += 1;\n        }\n        runPosition += 2;\n      }\n    }\n  }\n\n  /**\n   * Get the base index in the data array for the character\n   * @param {number} charCode - the unicode point for the character\n   */\n  baseIndexForChar( charCode ) {\n    let codePoint = charCode;\n    if ( charCode >= this.width * this.height ) {\n      const key = charCode.toString();\n\n      if ( this.charData && this.charData[key] ) {\n        if ( this.charData[key] !== undefined ) {\n          codePoint = this.charData[key].remap;\n        }\n      }\n    }\n    return codePoint * this.tileSize * this.tileSize;\n  }\n\n  /**\n   * Get the width of a character\n   * @param {number} charCode - the unicode point for the character\n   */\n  widthForChar( charCode ) {\n    const charKey = charCode.toString();\n    if ( this.charData && this.charData[charKey] ) {\n      if ( this.charData[charKey].width !== undefined ) {\n        return this.charData[charKey].width;\n      }\n    }\n    return this.standardWidth;\n  }\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Font);\n\n\n//# sourceURL=webpack://minnow/./src/FontData/Font.js?");

/***/ }),

/***/ "./src/FontData/FontData.js":
/*!**********************************!*\
  !*** ./src/FontData/FontData.js ***!
  \**********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _Font__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Font */ \"./src/FontData/Font.js\");\n\n\n\n/**\n * Holds all of the font data\n */\nclass FontData {\n  constructor() {\n    this.fonts = [];\n  }\n\n  addFont( fontData ) {\n    this.fonts.push( new _Font__WEBPACK_IMPORTED_MODULE_0__[\"default\"]( fontData ) );\n  }\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (FontData);\n\n\n//# sourceURL=webpack://minnow/./src/FontData/FontData.js?");

/***/ }),

/***/ "./src/FontData/small.font.json":
/*!**************************************!*\
  !*** ./src/FontData/small.font.json ***!
  \**************************************/
/*! exports provided: name, tileSize, width, height, originX, originY, standardWidth, letterSpacing, data, default */
/***/ (function(module) {

eval("module.exports = {\"name\":\"small\",\"tileSize\":8,\"width\":16,\"height\":8,\"originX\":2,\"originY\":2,\"standardWidth\":3,\"letterSpacing\":1,\"data\":[2122,0,3,2,5,0,1,2,1,1,1,2,5,0,3,2,5,0,1,2,1,1,1,2,5,0,1,2,1,1,1,2,5,0,1,2,1,1,1,2,5,0,3,2,36,0,5,2,3,0,1,2,1,1,1,2,1,1,1,2,3,0,1,2,1,1,1,2,1,1,1,2,3,0,5,2,19,0,5,2,3,0,1,2,1,1,1,2,1,1,1,2,3,0,5,2,3,0,1,2,1,1,1,2,1,1,1,2,3,0,5,2,19,0,5,2,3,0,1,2,3,1,1,2,3,0,2,2,2,1,1,2,3,0,1,2,1,1,3,2,3,0,1,2,3,1,1,2,3,0,2,2,1,1,2,2,4,0,3,2,14,0,3,2,3,0,3,2,1,1,1,2,3,0,1,2,1,1,3,2,3,0,2,2,1,1,2,2,3,0,3,2,1,1,1,2,3,0,1,2,1,1,3,2,3,0,3,2,13,0,5,2,3,0,1,2,3,1,1,2,3,0,1,2,1,1,1,2,1,1,1,2,3,0,1,2,3,1,1,2,3,0,1,2,2,1,2,2,3,0,2,2,1,1,1,2,5,0,3,2,37,0,3,2,5,0,1,2,1,1,1,2,5,0,1,2,1,1,1,2,5,0,3,2,13,0,3,2,4,0,2,2,1,1,1,2,4,0,1,2,1,1,2,2,4,0,1,2,1,1,1,2,5,0,1,2,1,1,2,2,4,0,2,2,1,1,1,2,5,0,3,2,13,0,3,2,5,0,1,2,1,1,2,2,4,0,2,2,1,1,1,2,5,0,1,2,1,1,1,2,4,0,2,2,1,1,1,2,4,0,1,2,1,1,2,2,4,0,3,2,28,0,5,2,3,0,1,2,1,1,1,2,1,1,1,2,3,0,2,2,1,1,2,2,3,0,1,2,1,1,1,2,1,1,1,2,3,0,5,2,20,0,3,2,4,0,2,2,1,1,2,2,3,0,1,2,3,1,1,2,3,0,2,2,1,1,2,2,4,0,3,2,20,0,3,2,5,0,1,2,1,1,2,2,4,0,2,2,1,1,1,2,5,0,3,2,52,0,5,2,3,0,1,2,3,1,1,2,3,0,5,2,28,0,3,2,5,0,1,2,1,1,1,2,5,0,3,2,52,0,3,2,5,0,1,2,1,1,2,2,4,0,2,2,1,1,2,2,4,0,2,2,1,1,1,2,5,0,3,2,19,0,4,2,4,0,1,2,2,1,2,2,3,0,1,2,1,1,1,2,1,1,1,2,3,0,1,2,1,1,1,2,1,1,1,2,3,0,1,2,1,1,1,2,1,1,1,2,3,0,2,2,2,1,1,2,4,0,4,2,11,0,5,2,3,0,1,2,3,1,1,2,3,0,2,2,1,1,2,2,4,0,1,2,1,1,1,2,4,0,2,2,1,1,1,2,4,0,1,2,2,1,1,2,4,0,4,2,12,0,5,2,3,0,1,2,3,1,1,2,3,0,1,2,1,1,3,2,3,0,1,2,3,1,1,2,3,0,3,2,1,1,1,2,3,0,1,2,3,1,1,2,3,0,5,2,11,0,5,2,3,0,1,2,3,1,1,2,3,0,3,2,1,1,1,2,3,0,1,2,3,1,1,2,3,0,3,2,1,1,1,2,3,0,1,2,3,1,1,2,3,0,5,2,13,0,3,2,5,0,1,2,1,1,1,2,3,0,3,2,1,1,1,2,3,0,1,2,3,1,1,2,3,0,1,2,1,1,1,2,1,1,1,2,3,0,1,2,1,1,1,2,1,1,1,2,3,0,5,2,11,0,5,2,3,0,1,2,3,1,1,2,3,0,3,2,1,1,1,2,3,0,1,2,3,1,1,2,3,0,1,2,1,1,3,2,3,0,1,2,3,1,1,2,3,0,5,2,11,0,5,2,3,0,1,2,3,1,1,2,3,0,1,2,1,1,1,2,1,1,1,2,3,0,1,2,3,1,1,2,3,0,1,2,1,1,3,2,3,0,1,2,3,1,1,2,3,0,5,2,12,0,3,2,5,0,1,2,1,1,1,2,5,0,1,2,1,1,2,2,4,0,2,2,1,1,1,2,3,0,3,2,1,1,1,2,3,0,1,2,3,1,1,2,3,0,5,2,11,0,5,2,3,0,1,2,3,1,1,2,3,0,1,2,1,1,1,2,1,1,1,2,3,0,1,2,3,1,1,2,3,0,1,2,1,1,1,2,1,1,1,2,3,0,1,2,3,1,1,2,3,0,5,2,11,0,5,2,3,0,1,2,3,1,1,2,3,0,3,2,1,1,1,2,3,0,1,2,3,1,1,2,3,0,1,2,1,1,1,2,1,1,1,2,3,0,1,2,3,1,1,2,3,0,5,2,20,0,3,2,5,0,1,2,1,1,1,2,5,0,3,2,5,0,1,2,1,1,1,2,5,0,3,2,20,0,3,2,5,0,1,2,1,1,2,2,4,0,2,2,1,1,1,2,5,0,3,2,5,0,1,2,1,1,1,2,5,0,3,2,22,0,3,2,4,0,2,2,1,1,1,2,3,0,2,2,1,1,2,2,3,0,1,2,1,1,2,2,4,0,2,2,1,1,2,2,4,0,2,2,1,1,1,2,5,0,3,2,19,0,5,2,3,0,1,2,3,1,1,2,3,0,5,2,3,0,1,2,3,1,1,2,3,0,5,2,19,0,3,2,5,0,1,2,1,1,2,2,4,0,2,2,1,1,2,2,4,0,2,2,1,1,1,2,3,0,2,2,1,1,2,2,3,0,1,2,1,1,2,2,4,0,3,2,14,0,3,2,5,0,1,2,1,1,1,2,5,0,4,2,4,0,1,2,2,1,1,2,3,0,3,2,1,1,1,2,3,0,1,2,3,1,1,2,3,0,5,2,12,0,4,2,3,0,2,2,2,1,1,2,3,0,1,2,1,1,3,2,3,0,1,2,1,1,1,2,1,1,1,2,3,0,1,2,3,1,1,2,3,0,2,2,1,1,2,2,4,0,3,2,12,0,5,2,3,0,1,2,1,1,1,2,1,1,1,2,3,0,1,2,3,1,1,2,3,0,1,2,1,1,1,2,1,1,1,2,3,0,1,2,1,1,1,2,1,1,1,2,3,0,1,2,3,1,1,2,3,0,5,2,11,0,5,2,3,0,1,2,3,1,1,2,3,0,1,2,1,1,1,2,1,1,1,2,3,0,1,2,3,1,1,2,3,0,1,2,1,1,1,2,1,1,1,2,3,0,1,2,2,1,2,2,3,0,4,2,12,0,5,2,3,0,1,2,3,1,1,2,3,0,1,2,1,1,3,2,3,0,1,2,1,1,1,2,5,0,1,2,1,1,3,2,3,0,1,2,3,1,1,2,3,0,5,2,11,0,4,2,4,0,1,2,2,1,2,2,3,0,1,2,1,1,1,2,1,1,1,2,3,0,1,2,1,1,1,2,1,1,1,2,3,0,1,2,1,1,1,2,1,1,1,2,3,0,1,2,2,1,2,2,3,0,4,2,12,0,5,2,3,0,1,2,3,1,1,2,3,0,1,2,1,1,3,2,3,0,1,2,3,1,1,2,3,0,1,2,1,1,3,2,3,0,1,2,3,1,1,2,3,0,5,2,11,0,3,2,5,0,1,2,1,1,1,2,5,0,1,2,1,1,3,2,3,0,1,2,3,1,1,2,3,0,1,2,1,1,3,2,3,0,1,2,3,1,1,2,3,0,5,2,11,0,5,2,3,0,1,2,3,1,1,2,3,0,1,2,1,1,1,2,1,1,1,2,3,0,1,2,1,1,3,2,3,0,1,2,1,1,3,2,3,0,1,2,3,1,1,2,3,0,5,2,11,0,5,2,3,0,1,2,1,1,1,2,1,1,1,2,3,0,1,2,1,1,1,2,1,1,1,2,3,0,1,2,3,1,1,2,3,0,1,2,1,1,1,2,1,1,1,2,3,0,1,2,1,1,1,2,1,1,1,2,3,0,5,2,11,0,5,2,3,0,1,2,3,1,1,2,3,0,2,2,1,1,2,2,4,0,1,2,1,1,1,2,4,0,2,2,1,1,2,2,3,0,1,2,3,1,1,2,3,0,5,2,11,0,5,2,3,0,1,2,3,1,1,2,3,0,1,2,1,1,1,2,1,1,1,2,3,0,3,2,1,1,1,2,5,0,1,2,1,1,1,2,5,0,1,2,1,1,1,2,5,0,3,2,11,0,5,2,3,0,1,2,1,1,1,2,1,1,1,2,3,0,1,2,1,1,1,2,1,1,1,2,3,0,1,2,2,1,2,2,3,0,1,2,1,1,1,2,1,1,1,2,3,0,1,2,1,1,1,2,1,1,1,2,3,0,5,2,11,0,5,2,3,0,1,2,3,1,1,2,3,0,1,2,1,1,3,2,3,0,1,2,1,1,1,2,5,0,1,2,1,1,1,2,5,0,1,2,1,1,1,2,5,0,3,2,13,0,5,2,3,0,1,2,1,1,1,2,1,1,1,2,3,0,1,2,1,1,1,2,1,1,1,2,3,0,1,2,1,1,1,2,1,1,1,2,3,0,1,2,3,1,1,2,3,0,1,2,3,1,1,2,3,0,5,2,11,0,5,2,3,0,1,2,1,1,1,2,1,1,1,2,3,0,1,2,1,1,1,2,1,1,1,2,3,0,1,2,1,1,1,2,1,1,1,2,3,0,1,2,1,1,1,2,1,1,1,2,3,0,1,2,3,1,1,2,3,0,5,2,11,0,5,2,3,0,1,2,3,1,1,2,3,0,1,2,1,1,1,2,1,1,1,2,3,0,1,2,1,1,1,2,1,1,1,2,3,0,1,2,1,1,1,2,1,1,1,2,3,0,1,2,3,1,1,2,3,0,5,2,11,0,3,2,5,0,1,2,1,1,1,2,5,0,1,2,1,1,3,2,3,0,1,2,3,1,1,2,3,0,1,2,1,1,1,2,1,1,1,2,3,0,1,2,3,1,1,2,3,0,5,2,12,0,4,2,3,0,2,2,2,1,1,2,3,0,1,2,2,1,2,2,3,0,1,2,1,1,1,2,1,1,1,2,3,0,1,2,1,1,1,2,1,1,1,2,3,0,1,2,3,1,1,2,3,0,5,2,11,0,5,2,3,0,1,2,1,1,1,2,1,1,1,2,3,0,1,2,2,1,2,2,3,0,1,2,3,1,1,2,3,0,1,2,1,1,1,2,1,1,1,2,3,0,1,2,3,1,1,2,3,0,5,2,11,0,4,2,4,0,1,2,2,1,2,2,3,0,3,2,1,1,1,2,3,0,1,2,3,1,1,2,3,0,1,2,1,1,3,2,3,0,2,2,2,1,1,2,4,0,4,2,12,0,3,2,5,0,1,2,1,1,1,2,5,0,1,2,1,1,1,2,5,0,1,2,1,1,1,2,4,0,2,2,1,1,2,2,3,0,1,2,3,1,1,2,3,0,5,2,11,0,5,2,3,0,1,2,3,1,1,2,3,0,1,2,1,1,1,2,1,1,1,2,3,0,1,2,1,1,1,2,1,1,1,2,3,0,1,2,1,1,1,2,1,1,1,2,3,0,1,2,1,1,1,2,1,1,1,2,3,0,5,2,12,0,3,2,4,0,2,2,1,1,2,2,3,0,1,2,1,1,1,2,1,1,1,2,3,0,1,2,1,1,1,2,1,1,1,2,3,0,1,2,1,1,1,2,1,1,1,2,3,0,1,2,1,1,1,2,1,1,1,2,3,0,5,2,11,0,5,2,3,0,1,2,3,1,1,2,3,0,1,2,3,1,1,2,3,0,1,2,1,1,1,2,1,1,1,2,3,0,1,2,1,1,1,2,1,1,1,2,3,0,1,2,1,1,1,2,1,1,1,2,3,0,5,2,11,0,5,2,3,0,1,2,1,1,1,2,1,1,1,2,3,0,1,2,1,1,1,2,1,1,1,2,3,0,2,2,1,1,2,2,3,0,1,2,1,1,1,2,1,1,1,2,3,0,1,2,1,1,1,2,1,1,1,2,3,0,5,2,12,0,3,2,5,0,1,2,1,1,1,2,4,0,2,2,1,1,2,2,3,0,1,2,1,1,1,2,1,1,1,2,3,0,1,2,1,1,1,2,1,1,1,2,3,0,1,2,1,1,1,2,1,1,1,2,3,0,5,2,11,0,5,2,3,0,1,2,3,1,1,2,3,0,1,2,1,1,3,2,3,0,2,2,1,1,2,2,3,0,3,2,1,1,1,2,3,0,1,2,3,1,1,2,3,0,5,2,11,0,4,2,4,0,1,2,2,1,1,2,4,0,1,2,1,1,2,2,4,0,1,2,1,1,1,2,5,0,1,2,1,1,2,2,4,0,1,2,2,1,1,2,4,0,4,2,22,0,3,2,4,0,2,2,1,1,1,2,3,0,2,2,1,1,2,2,3,0,1,2,1,1,2,2,4,0,3,2,22,0,4,2,4,0,1,2,2,1,1,2,4,0,2,2,1,1,1,2,5,0,1,2,1,1,1,2,4,0,2,2,1,1,1,2,4,0,1,2,2,1,1,2,4,0,4,2,35,0,5,2,3,0,1,2,1,1,1,2,1,1,1,2,3,0,2,2,1,1,2,2,4,0,3,2,12,0,5,2,3,0,1,2,3,1,1,2,3,0,5,2,68,0,3,2,4,0,2,2,1,1,1,2,4,0,1,2,1,1,2,2,4,0,3,2,14,0,4,2,3,0,2,2,2,1,1,2,3,0,1,2,1,1,1,2,1,1,1,2,3,0,1,2,1,1,1,2,1,1,1,2,3,0,2,2,2,1,1,2,4,0,4,2,19,0,5,2,3,0,1,2,3,1,1,2,3,0,1,2,1,1,1,2,1,1,1,2,3,0,1,2,1,1,1,2,1,1,1,2,3,0,1,2,3,1,1,2,3,0,1,2,1,1,3,2,3,0,3,2,13,0,5,2,3,0,1,2,3,1,1,2,3,0,1,2,1,1,3,2,3,0,1,2,1,1,3,2,3,0,1,2,3,1,1,2,3,0,5,2,19,0,5,2,3,0,1,2,3,1,1,2,3,0,1,2,1,1,1,2,1,1,1,2,3,0,1,2,1,1,1,2,1,1,1,2,3,0,1,2,3,1,1,2,3,0,3,2,1,1,1,2,5,0,3,2,11,0,5,2,3,0,1,2,3,1,1,2,3,0,1,2,1,1,3,2,3,0,1,2,3,1,1,2,3,0,1,2,3,1,1,2,3,0,5,2,19,0,3,2,5,0,1,2,1,1,1,2,5,0,1,2,1,1,2,2,4,0,1,2,2,1,1,2,4,0,1,2,1,1,3,2,3,0,2,2,2,1,1,2,4,0,4,2,11,0,5,2,3,0,1,2,3,1,1,2,3,0,3,2,1,1,1,2,3,0,1,2,3,1,1,2,3,0,1,2,3,1,1,2,3,0,5,2,19,0,5,2,3,0,1,2,1,1,1,2,1,1,1,2,3,0,1,2,1,1,1,2,1,1,1,2,3,0,1,2,1,1,1,2,1,1,1,2,3,0,1,2,3,1,1,2,3,0,1,2,1,1,3,2,3,0,3,2,14,0,3,2,5,0,1,2,1,1,1,2,5,0,1,2,1,1,1,2,5,0,1,2,1,1,1,2,5,0,3,2,5,0,1,2,1,1,1,2,5,0,3,2,12,0,5,2,3,0,1,2,3,1,1,2,3,0,1,2,1,1,1,2,1,1,1,2,3,0,3,2,1,1,1,2,5,0,3,2,5,0,1,2,1,1,1,2,5,0,3,2,11,0,5,2,3,0,1,2,1,1,1,2,1,1,1,2,3,0,1,2,2,1,2,2,3,0,1,2,1,1,1,2,1,1,1,2,3,0,1,2,1,1,3,2,3,0,1,2,1,1,1,2,5,0,3,2,14,0,3,2,5,0,1,2,1,1,1,2,5,0,1,2,1,1,1,2,5,0,1,2,1,1,1,2,5,0,1,2,1,1,1,2,5,0,1,2,1,1,1,2,5,0,3,2,12,0,5,2,3,0,1,2,1,1,1,2,1,1,1,2,3,0,1,2,1,1,1,2,1,1,1,2,3,0,1,2,3,1,1,2,3,0,1,2,3,1,1,2,3,0,5,2,19,0,5,2,3,0,1,2,1,1,1,2,1,1,1,2,3,0,1,2,1,1,1,2,1,1,1,2,3,0,1,2,1,1,1,2,1,1,1,2,3,0,1,2,3,1,1,2,3,0,5,2,19,0,5,2,3,0,1,2,3,1,1,2,3,0,1,2,1,1,1,2,1,1,1,2,3,0,1,2,1,1,1,2,1,1,1,2,3,0,1,2,3,1,1,2,3,0,5,2,19,0,3,2,5,0,1,2,1,1,3,2,3,0,1,2,3,1,1,2,3,0,1,2,1,1,1,2,1,1,1,2,3,0,1,2,3,1,1,2,3,0,5,2,21,0,3,2,3,0,3,2,1,1,1,2,3,0,1,2,3,1,1,2,3,0,1,2,1,1,1,2,1,1,1,2,3,0,1,2,3,1,1,2,3,0,5,2,19,0,3,2,5,0,1,2,1,1,1,2,5,0,1,2,1,1,3,2,3,0,1,2,1,1,1,2,1,1,1,2,3,0,1,2,2,1,2,2,3,0,4,2,20,0,4,2,4,0,1,2,2,1,2,2,3,0,3,2,1,1,1,2,3,0,1,2,1,1,3,2,3,0,2,2,2,1,1,2,4,0,4,2,20,0,3,2,5,0,1,2,1,1,1,2,5,0,1,2,1,1,1,2,4,0,2,2,1,1,2,2,3,0,1,2,3,1,1,2,3,0,2,2,1,1,2,2,4,0,3,2,12,0,5,2,3,0,1,2,3,1,1,2,3,0,1,2,1,1,1,2,1,1,1,2,3,0,1,2,1,1,1,2,1,1,1,2,3,0,1,2,1,1,1,2,1,1,1,2,3,0,5,2,20,0,3,2,4,0,2,2,1,1,2,2,3,0,1,2,1,1,1,2,1,1,1,2,3,0,1,2,1,1,1,2,1,1,1,2,3,0,1,2,1,1,1,2,1,1,1,2,3,0,5,2,19,0,5,2,3,0,1,2,3,1,1,2,3,0,1,2,3,1,1,2,3,0,1,2,1,1,1,2,1,1,1,2,3,0,1,2,1,1,1,2,1,1,1,2,3,0,5,2,19,0,5,2,3,0,1,2,1,1,1,2,1,1,1,2,3,0,2,2,1,1,2,2,3,0,1,2,1,1,1,2,1,1,1,2,3,0,1,2,1,1,1,2,1,1,1,2,3,0,5,2,20,0,3,2,5,0,1,2,1,1,1,2,4,0,2,2,1,1,2,2,3,0,1,2,1,1,1,2,1,1,1,2,3,0,1,2,1,1,1,2,1,1,1,2,3,0,5,2,19,0,5,2,3,0,1,2,3,1,1,2,3,0,2,2,1,1,2,2,3,0,3,2,1,1,1,2,3,0,1,2,3,1,1,2,3,0,5,2,20,0,4,2,4,0,1,2,2,1,1,2,3,0,2,2,1,1,2,2,3,0,1,2,2,1,1,2,4,0,2,2,1,1,2,2,4,0,1,2,2,1,1,2,4,0,4,2,12,0,3,2,5,0,1,2,1,1,1,2,5,0,1,2,1,1,1,2,5,0,1,2,1,1,1,2,5,0,1,2,1,1,1,2,5,0,1,2,1,1,1,2,5,0,3,2,12,0,4,2,4,0,1,2,2,1,1,2,4,0,2,2,1,1,2,2,4,0,1,2,2,1,1,2,3,0,2,2,1,1,2,2,3,0,1,2,2,1,1,2,4,0,4,2,28,0,5,2,3,0,1,2,1,1,1,2,1,1,1,2,3,0,2,2,1,1,2,2,4,0,3,2,75,0]};\n\n//# sourceURL=webpack://minnow/./src/FontData/small.font.json?");

/***/ }),

/***/ "./src/FontData/standard.font.json":
/*!*****************************************!*\
  !*** ./src/FontData/standard.font.json ***!
  \*****************************************/
/*! exports provided: name, tileSize, width, height, originX, originY, standardWidth, letterSpacing, charData, data, default */
/***/ (function(module) {

eval("module.exports = {\"name\":\"standard\",\"tileSize\":16,\"width\":16,\"height\":16,\"originX\":2,\"originY\":4,\"standardWidth\":5,\"letterSpacing\":1,\"charData\":{\"33\":{\"name\":\"!\",\"width\":3},\"34\":{\"name\":\"double quote\",\"width\":4},\"37\":{\"name\":\"percent\",\"width\":7},\"38\":{\"name\":\"and\",\"width\":7},\"39\":{\"name\":\"single quote\",\"width\":1},\"40\":{\"name\":\"(\",\"width\":3},\"41\":{\"name\":\")\",\"width\":3},\"44\":{\"name\":\",\",\"width\":2},\"46\":{\"name\":\".\",\"width\":1},\"47\":{\"name\":\"f slash\",\"width\":7},\"49\":{\"name\":\"1\",\"width\":3},\"58\":{\"name\":\":\",\"width\":1},\"59\":{\"name\":\";\",\"width\":2},\"60\":{\"name\":\"<\",\"width\":4},\"62\":{\"name\":\">\",\"width\":4},\"64\":{\"name\":\"@\",\"width\":7},\"91\":{\"name\":\"[\",\"width\":3},\"92\":{\"name\":\"backslash\",\"width\":7},\"93\":{\"name\":\"]\",\"width\":3},\"96\":{\"name\":\"grave\",\"width\":2},\"105\":{\"name\":\"i\",\"width\":1},\"107\":{\"name\":\"k\",\"width\":4},\"108\":{\"name\":\"l\",\"width\":1},\"123\":{\"name\":\"{\",\"width\":3},\"124\":{\"name\":\"|\",\"width\":1},\"125\":{\"name\":\"}\",\"width\":3},\"161\":{\"name\":\"upside down !\",\"width\":3},\"164\":{\"name\":\"currency\",\"width\":6},\"165\":{\"name\":\"yen\",\"width\":7},\"166\":{\"name\":\"broken bar\",\"width\":1},\"167\":{\"name\":\"section\",\"width\":6},\"169\":{\"name\":\"copyright\",\"width\":7},\"170\":{\"name\":\"f ordinal\",\"width\":4},\"171\":{\"name\":\"<<\",\"width\":6},\"172\":{\"name\":\"not\",\"width\":6},\"174\":{\"name\":\"(r)\",\"width\":8},\"176\":{\"name\":\"degree\",\"width\":4},\"178\":{\"name\":\"^2\",\"width\":3},\"179\":{\"name\":\"^3\",\"width\":3},\"180\":{\"name\":\"acute\",\"width\":2},\"182\":{\"name\":\"pilcrow\",\"width\":3},\"183\":{\"name\":\"middle dot\",\"width\":1},\"185\":{\"name\":\"^1\",\"width\":4},\"186\":{\"name\":\"m ordinal\",\"width\":4},\"187\":{\"name\":\">>\",\"width\":6},\"188\":{\"name\":\"1/4\",\"width\":7},\"189\":{\"name\":\"1/2\",\"width\":7},\"190\":{\"name\":\"3/4\",\"width\":7},\"236\":{\"name\":\"i\",\"width\":3},\"237\":{\"name\":\"i\",\"width\":3},\"238\":{\"name\":\"i\",\"width\":3},\"239\":{\"name\":\"i\",\"width\":3},\"8364\":{\"name\":\"euro\",\"remap\":1,\"width\":6}},\"data\":[307,0,5,2,10,0,2,2,3,1,2,2,8,0,2,2,1,1,3,2,1,1,1,2,8,0,1,2,4,1,3,2,8,0,2,2,1,1,4,2,9,0,1,2,4,1,3,2,8,0,2,2,1,1,3,2,1,1,1,2,9,0,2,2,3,1,2,2,10,0,5,2,8058,0,3,2,13,0,1,2,1,1,1,2,13,0,3,2,12,0,2,2,1,1,2,2,11,0,1,2,3,1,1,2,11,0,1,2,3,1,1,2,11,0,1,2,3,1,1,2,11,0,1,2,3,1,1,2,11,0,5,2,219,0,6,2,10,0,1,2,1,1,2,2,1,1,1,2,10,0,1,2,1,1,2,2,1,1,1,2,10,0,6,2,107,0,5,2,10,0,2,2,1,1,1,2,1,1,2,2,9,0,1,2,5,1,1,2,9,0,2,2,1,1,1,2,1,1,2,2,9,0,1,2,5,1,1,2,9,0,2,2,1,1,1,2,1,1,2,2,10,0,5,2,140,0,3,2,11,0,3,2,1,1,2,2,10,0,1,2,4,1,2,2,9,0,3,2,1,1,1,2,1,1,1,2,10,0,2,2,1,1,1,2,1,1,1,2,9,0,2,2,3,1,2,2,9,0,1,2,1,1,1,2,1,1,2,2,10,0,1,2,1,1,1,2,1,1,3,2,9,0,2,2,4,1,1,2,10,0,2,2,1,1,3,2,11,0,3,2,107,0,3,2,2,0,3,2,8,0,1,2,1,1,4,2,1,1,2,2,7,0,2,2,1,1,2,2,1,1,1,2,1,1,1,2,8,0,2,2,1,1,2,2,1,1,2,2,8,0,3,2,1,1,3,2,8,0,2,2,1,1,2,2,1,1,2,2,8,0,1,2,1,1,1,2,1,1,2,2,1,1,2,2,7,0,2,2,1,1,4,2,1,1,1,2,8,0,3,2,2,0,3,2,120,0,8,2,7,0,2,2,4,1,1,2,1,1,1,2,7,0,1,2,1,1,4,2,1,1,2,2,7,0,1,2,1,1,3,2,1,1,1,2,1,1,1,2,7,0,1,2,1,1,2,2,2,1,3,2,7,0,2,2,2,1,2,2,1,1,1,2,9,0,2,2,1,1,2,2,1,1,1,2,10,0,2,2,2,1,2,2,11,0,4,2,217,0,3,2,13,0,1,2,1,1,1,2,13,0,1,2,1,1,1,2,13,0,3,2,111,0,3,2,12,0,2,2,1,1,1,2,11,0,2,2,1,1,2,2,11,0,1,2,1,1,2,2,12,0,1,2,1,1,1,2,13,0,1,2,1,1,2,2,12,0,2,2,1,1,2,2,12,0,2,2,1,1,1,2,13,0,3,2,123,0,3,2,13,0,1,2,1,1,2,2,12,0,2,2,1,1,2,2,12,0,2,2,1,1,1,2,13,0,1,2,1,1,1,2,12,0,2,2,1,1,1,2,11,0,2,2,1,1,2,2,11,0,1,2,1,1,2,2,12,0,3,2,189,0,6,2,10,0,1,2,1,1,2,2,1,1,1,2,10,0,2,2,2,1,2,2,10,0,2,2,2,1,2,2,10,0,1,2,1,1,2,2,1,1,1,2,10,0,6,2,108,0,3,2,13,0,1,2,1,1,1,2,11,0,3,2,1,1,3,2,9,0,1,2,5,1,1,2,9,0,3,2,1,1,3,2,11,0,1,2,1,1,1,2,13,0,3,2,139,0,3,2,13,0,1,2,1,1,2,2,12,0,2,2,1,1,1,2,13,0,1,2,1,1,1,2,13,0,3,2,236,0,7,2,9,0,1,2,5,1,1,2,9,0,7,2,185,0,3,2,13,0,1,2,1,1,1,2,13,0,3,2,221,0,3,2,13,0,1,2,1,1,2,2,12,0,2,2,1,1,2,2,12,0,2,2,1,1,2,2,12,0,2,2,1,1,2,2,12,0,2,2,1,1,2,2,12,0,2,2,1,1,2,2,12,0,2,2,1,1,1,2,13,0,3,2,120,0,5,2,10,0,2,2,3,1,2,2,9,0,1,2,1,1,3,2,1,1,1,2,9,0,1,2,2,1,2,2,1,1,1,2,9,0,1,2,1,1,1,2,1,1,1,2,1,1,1,2,9,0,1,2,1,1,2,2,2,1,1,2,9,0,1,2,1,1,3,2,1,1,1,2,9,0,2,2,3,1,2,2,10,0,5,2,122,0,5,2,11,0,1,2,3,1,1,2,11,0,2,2,1,1,2,2,12,0,1,2,1,1,1,2,13,0,1,2,1,1,1,2,12,0,2,2,1,1,1,2,12,0,1,2,2,1,1,2,12,0,2,2,1,1,1,2,13,0,3,2,124,0,7,2,9,0,1,2,5,1,1,2,9,0,2,2,1,1,4,2,10,0,2,2,1,1,2,2,12,0,2,2,1,1,2,2,9,0,5,2,1,1,1,2,9,0,1,2,1,1,3,2,1,1,1,2,9,0,2,2,3,1,2,2,10,0,5,2,123,0,5,2,10,0,2,2,3,1,2,2,9,0,1,2,1,1,3,2,1,1,1,2,9,0,5,2,1,1,1,2,10,0,1,2,3,1,2,2,9,0,5,2,1,1,1,2,9,0,1,2,1,1,3,2,1,1,1,2,9,0,2,2,3,1,2,2,10,0,5,2,126,0,3,2,13,0,1,2,1,1,1,2,13,0,1,2,1,1,1,2,9,0,5,2,1,1,1,2,9,0,1,2,5,1,1,2,9,0,1,2,1,1,3,2,1,1,1,2,9,0,1,2,1,1,1,2,1,0,1,2,1,1,1,2,9,0,1,2,1,1,1,2,1,0,1,2,1,1,1,2,9,0,3,2,1,0,3,2,121,0,6,2,10,0,1,2,4,1,2,2,9,0,5,2,1,1,1,2,9,0,5,2,1,1,1,2,9,0,1,2,4,1,2,2,9,0,1,2,1,1,4,2,10,0,1,2,1,1,5,2,9,0,1,2,5,1,1,2,9,0,7,2,122,0,5,2,10,0,2,2,3,1,2,2,9,0,1,2,1,1,3,2,1,1,1,2,9,0,1,2,1,1,3,2,1,1,1,2,9,0,1,2,4,1,2,2,9,0,1,2,1,1,5,2,9,0,1,2,1,1,3,2,1,1,1,2,9,0,2,2,3,1,2,2,10,0,5,2,124,0,3,2,13,0,1,2,1,1,1,2,13,0,1,2,1,1,1,2,13,0,1,2,1,1,2,2,12,0,2,2,1,1,2,2,12,0,2,2,1,1,1,2,9,0,5,2,1,1,1,2,9,0,1,2,5,1,1,2,9,0,7,2,122,0,5,2,10,0,2,2,3,1,2,2,9,0,1,2,1,1,3,2,1,1,1,2,9,0,1,2,1,1,3,2,1,1,1,2,9,0,2,2,3,1,2,2,9,0,1,2,1,1,3,2,1,1,1,2,9,0,1,2,1,1,3,2,1,1,1,2,9,0,2,2,3,1,2,2,10,0,5,2,123,0,5,2,10,0,2,2,3,1,2,2,9,0,1,2,1,1,3,2,1,1,1,2,9,0,5,2,1,1,1,2,9,0,2,2,4,1,1,2,9,0,1,2,1,1,3,2,1,1,1,2,9,0,1,2,1,1,3,2,1,1,1,2,9,0,2,2,3,1,2,2,10,0,5,2,138,0,3,2,13,0,1,2,1,1,1,2,13,0,3,2,13,0,1,2,1,1,1,2,13,0,3,2,157,0,3,2,13,0,1,2,1,1,2,2,12,0,2,2,1,1,1,2,13,0,1,2,1,1,1,2,13,0,3,2,13,0,1,2,1,1,1,2,13,0,3,2,175,0,3,2,12,0,2,2,1,1,1,2,11,0,2,2,1,1,2,2,10,0,2,2,1,1,2,2,11,0,1,2,1,1,2,2,12,0,2,2,1,1,2,2,12,0,2,2,1,1,2,2,12,0,2,2,1,1,1,2,13,0,3,2,138,0,7,2,9,0,1,2,5,1,1,2,9,0,7,2,9,0,1,2,5,1,1,2,9,0,7,2,169,0,3,2,13,0,1,2,1,1,2,2,12,0,2,2,1,1,2,2,12,0,2,2,1,1,2,2,12,0,2,2,1,1,1,2,11,0,2,2,1,1,2,2,10,0,2,2,1,1,2,2,11,0,1,2,1,1,2,2,12,0,3,2,127,0,3,2,13,0,1,2,1,1,1,2,13,0,3,2,13,0,1,2,1,1,2,2,12,0,1,2,2,1,2,2,9,0,5,2,1,1,1,2,9,0,1,2,1,1,3,2,1,1,1,2,9,0,2,2,3,1,2,2,10,0,5,2,124,0,7,2,8,0,2,2,5,1,1,2,7,0,2,2,1,1,6,2,7,0,1,2,1,1,1,2,2,1,1,2,1,1,2,2,7,0,1,2,1,1,1,2,1,1,1,2,1,1,1,2,1,1,1,2,7,0,1,2,1,1,1,2,3,1,1,2,1,1,1,2,7,0,2,2,1,1,4,2,1,1,1,2,8,0,2,2,4,1,2,2,9,0,6,2,120,0,3,2,1,0,3,2,9,0,1,2,1,1,1,2,1,0,1,2,1,1,1,2,9,0,1,2,1,1,3,2,1,1,1,2,9,0,1,2,5,1,1,2,9,0,1,2,1,1,3,2,1,1,1,2,9,0,1,2,1,1,3,2,1,1,1,2,9,0,2,2,1,1,1,2,1,1,2,2,10,0,2,2,1,1,2,2,12,0,3,2,123,0,6,2,10,0,1,2,4,1,2,2,9,0,1,2,1,1,3,2,1,1,1,2,9,0,1,2,1,1,3,2,1,1,1,2,9,0,1,2,4,1,2,2,9,0,1,2,1,1,3,2,1,1,1,2,9,0,1,2,1,1,3,2,1,1,1,2,9,0,1,2,4,1,2,2,9,0,6,2,123,0,5,2,10,0,2,2,3,1,2,2,9,0,1,2,1,1,3,2,1,1,1,2,9,0,1,2,1,1,1,2,1,0,3,2,9,0,1,2,1,1,1,2,13,0,1,2,1,1,1,2,1,0,3,2,9,0,1,2,1,1,3,2,1,1,1,2,9,0,2,2,3,1,2,2,10,0,5,2,122,0,6,2,10,0,1,2,4,1,2,2,9,0,1,2,1,1,3,2,1,1,1,2,9,0,1,2,1,1,1,2,1,0,1,2,1,1,1,2,9,0,1,2,1,1,1,2,1,0,1,2,1,1,1,2,9,0,1,2,1,1,1,2,1,0,1,2,1,1,1,2,9,0,1,2,1,1,3,2,1,1,1,2,9,0,1,2,4,1,2,2,9,0,6,2,122,0,7,2,9,0,1,2,5,1,1,2,9,0,1,2,1,1,5,2,9,0,1,2,1,1,4,2,10,0,1,2,4,1,1,2,10,0,1,2,1,1,4,2,10,0,1,2,1,1,5,2,9,0,1,2,5,1,1,2,9,0,7,2,121,0,3,2,13,0,1,2,1,1,1,2,13,0,1,2,1,1,1,2,13,0,1,2,1,1,4,2,10,0,1,2,4,1,1,2,10,0,1,2,1,1,4,2,10,0,1,2,1,1,5,2,9,0,1,2,5,1,1,2,9,0,7,2,122,0,5,2,10,0,2,2,3,1,2,2,9,0,1,2,1,1,3,2,1,1,1,2,9,0,1,2,1,1,3,2,1,1,1,2,9,0,1,2,1,1,1,2,3,1,1,2,9,0,1,2,1,1,5,2,9,0,1,2,1,1,3,2,1,1,1,2,9,0,2,2,3,1,2,2,10,0,5,2,122,0,3,2,1,0,3,2,9,0,1,2,1,1,1,2,1,0,1,2,1,1,1,2,9,0,1,2,1,1,1,2,1,0,1,2,1,1,1,2,9,0,1,2,1,1,3,2,1,1,1,2,9,0,1,2,5,1,1,2,9,0,1,2,1,1,3,2,1,1,1,2,9,0,1,2,1,1,1,2,1,0,1,2,1,1,1,2,9,0,1,2,1,1,1,2,1,0,1,2,1,1,1,2,9,0,3,2,1,0,3,2,121,0,7,2,9,0,1,2,5,1,1,2,9,0,3,2,1,1,3,2,11,0,1,2,1,1,1,2,13,0,1,2,1,1,1,2,13,0,1,2,1,1,1,2,11,0,3,2,1,1,3,2,9,0,1,2,5,1,1,2,9,0,7,2,121,0,7,2,9,0,1,2,5,1,1,2,9,0,1,2,1,1,3,2,1,1,1,2,9,0,3,2,1,0,1,2,1,1,1,2,13,0,1,2,1,1,1,2,13,0,1,2,1,1,1,2,13,0,1,2,1,1,1,2,13,0,1,2,1,1,1,2,13,0,3,2,121,0,3,2,1,0,3,2,9,0,1,2,1,1,3,2,1,1,1,2,9,0,1,2,1,1,2,2,1,1,2,2,9,0,1,2,1,1,1,2,1,1,2,2,10,0,1,2,2,1,2,2,11,0,1,2,1,1,1,2,1,1,2,2,10,0,1,2,1,1,2,2,1,1,2,2,9,0,1,2,1,1,3,2,1,1,1,2,9,0,3,2,1,0,3,2,121,0,7,2,9,0,1,2,5,1,1,2,9,0,1,2,1,1,5,2,9,0,1,2,1,1,1,2,13,0,1,2,1,1,1,2,13,0,1,2,1,1,1,2,13,0,1,2,1,1,1,2,13,0,1,2,1,1,1,2,13,0,3,2,125,0,3,2,1,0,3,2,9,0,1,2,1,1,1,2,1,0,1,2,1,1,1,2,9,0,1,2,1,1,1,2,1,0,1,2,1,1,1,2,9,0,1,2,1,1,1,2,1,0,1,2,1,1,1,2,9,0,1,2,1,1,3,2,1,1,1,2,9,0,1,2,1,1,1,2,1,1,1,2,1,1,1,2,9,0,1,2,1,1,1,2,1,1,1,2,1,1,1,2,9,0,1,2,2,1,1,2,2,1,1,2,9,0,7,2,121,0,3,2,1,0,3,2,9,0,1,2,1,1,1,2,1,0,1,2,1,1,1,2,9,0,1,2,1,1,1,2,1,0,1,2,1,1,1,2,9,0,1,2,1,1,3,2,1,1,1,2,9,0,1,2,1,1,2,2,2,1,1,2,9,0,1,2,1,1,1,2,1,1,1,2,1,1,1,2,9,0,1,2,2,1,2,2,1,1,1,2,9,0,1,2,1,1,3,2,1,1,1,2,9,0,3,2,1,0,3,2,122,0,5,2,10,0,2,2,3,1,2,2,9,0,1,2,1,1,3,2,1,1,1,2,9,0,1,2,1,1,1,2,1,0,1,2,1,1,1,2,9,0,1,2,1,1,1,2,1,0,1,2,1,1,1,2,9,0,1,2,1,1,1,2,1,0,1,2,1,1,1,2,9,0,1,2,1,1,3,2,1,1,1,2,9,0,2,2,3,1,2,2,10,0,5,2,122,0,3,2,13,0,1,2,1,1,1,2,13,0,1,2,1,1,1,2,13,0,1,2,1,1,4,2,10,0,1,2,4,1,2,2,9,0,1,2,1,1,3,2,1,1,1,2,9,0,1,2,1,1,3,2,1,1,1,2,9,0,1,2,4,1,2,2,9,0,6,2,123,0,6,2,9,0,2,2,2,1,1,2,1,1,1,2,9,0,1,2,1,1,1,2,2,1,2,2,9,0,1,2,1,1,3,2,1,1,1,2,9,0,1,2,1,1,1,2,1,0,1,2,1,1,1,2,9,0,1,2,1,1,1,2,1,0,1,2,1,1,1,2,9,0,1,2,1,1,3,2,1,1,1,2,9,0,2,2,3,1,2,2,10,0,5,2,122,0,3,2,1,0,3,2,9,0,1,2,1,1,1,2,1,0,1,2,1,1,1,2,9,0,1,2,1,1,1,2,1,0,1,2,1,1,1,2,9,0,1,2,1,1,3,2,1,1,1,2,9,0,1,2,4,1,2,2,9,0,1,2,1,1,3,2,1,1,1,2,9,0,1,2,1,1,3,2,1,1,1,2,9,0,1,2,4,1,2,2,9,0,6,2,122,0,6,2,10,0,1,2,4,1,2,2,9,0,5,2,1,1,1,2,10,0,4,2,1,1,1,2,9,0,2,2,3,1,2,2,9,0,1,2,1,1,4,2,10,0,1,2,1,1,5,2,9,0,2,2,4,1,1,2,10,0,6,2,123,0,3,2,13,0,1,2,1,1,1,2,13,0,1,2,1,1,1,2,13,0,1,2,1,1,1,2,13,0,1,2,1,1,1,2,13,0,1,2,1,1,1,2,11,0,3,2,1,1,3,2,9,0,1,2,5,1,1,2,9,0,7,2,122,0,5,2,10,0,2,2,3,1,2,2,9,0,1,2,1,1,3,2,1,1,1,2,9,0,1,2,1,1,1,2,1,0,1,2,1,1,1,2,9,0,1,2,1,1,1,2,1,0,1,2,1,1,1,2,9,0,1,2,1,1,1,2,1,0,1,2,1,1,1,2,9,0,1,2,1,1,1,2,1,0,1,2,1,1,1,2,9,0,1,2,1,1,1,2,1,0,1,2,1,1,1,2,9,0,3,2,1,0,3,2,123,0,3,2,12,0,2,2,1,1,2,2,10,0,2,2,1,1,1,2,1,1,2,2,9,0,1,2,1,1,3,2,1,1,1,2,9,0,1,2,1,1,1,2,1,0,1,2,1,1,1,2,9,0,1,2,1,1,1,2,1,0,1,2,1,1,1,2,9,0,1,2,1,1,1,2,1,0,1,2,1,1,1,2,9,0,1,2,1,1,1,2,1,0,1,2,1,1,1,2,9,0,3,2,1,0,3,2,121,0,7,2,9,0,1,2,2,1,1,2,2,1,1,2,9,0,1,2,1,1,1,2,1,1,1,2,1,1,1,2,9,0,1,2,1,1,1,2,1,1,1,2,1,1,1,2,9,0,1,2,1,1,3,2,1,1,1,2,9,0,1,2,1,1,1,2,1,0,1,2,1,1,1,2,9,0,1,2,1,1,1,2,1,0,1,2,1,1,1,2,9,0,1,2,1,1,1,2,1,0,1,2,1,1,1,2,9,0,3,2,1,0,3,2,121,0,3,2,1,0,3,2,9,0,1,2,1,1,1,2,1,0,1,2,1,1,1,2,9,0,1,2,1,1,3,2,1,1,1,2,9,0,2,2,1,1,1,2,1,1,2,2,10,0,2,2,1,1,2,2,10,0,2,2,1,1,1,2,1,1,2,2,9,0,1,2,1,1,3,2,1,1,1,2,9,0,1,2,1,1,1,2,1,0,1,2,1,1,1,2,9,0,3,2,1,0,3,2,123,0,3,2,13,0,1,2,1,1,1,2,13,0,1,2,1,1,1,2,13,0,1,2,1,1,1,2,12,0,2,2,1,1,2,2,10,0,2,2,1,1,1,2,1,1,2,2,9,0,1,2,1,1,3,2,1,1,1,2,9,0,1,2,1,1,1,2,1,0,1,2,1,1,1,2,9,0,3,2,1,0,3,2,121,0,7,2,9,0,1,2,5,1,1,2,9,0,1,2,1,1,5,2,9,0,2,2,1,1,2,2,12,0,2,2,1,1,2,2,12,0,2,2,1,1,2,2,9,0,5,2,1,1,1,2,9,0,1,2,5,1,1,2,9,0,7,2,121,0,4,2,12,0,1,2,2,1,1,2,12,0,1,2,1,1,2,2,12,0,1,2,1,1,1,2,13,0,1,2,1,1,1,2,13,0,1,2,1,1,1,2,13,0,1,2,1,1,2,2,12,0,1,2,2,1,1,2,12,0,4,2,130,0,3,2,12,0,2,2,1,1,1,2,11,0,2,2,1,1,2,2,10,0,2,2,1,1,2,2,10,0,2,2,1,1,2,2,10,0,2,2,1,1,2,2,10,0,2,2,1,1,2,2,11,0,1,2,1,1,2,2,12,0,3,2,125,0,4,2,12,0,1,2,2,1,1,2,12,0,2,2,1,1,1,2,13,0,1,2,1,1,1,2,13,0,1,2,1,1,1,2,13,0,1,2,1,1,1,2,12,0,2,2,1,1,1,2,12,0,1,2,2,1,1,2,12,0,4,2,188,0,3,2,1,0,3,2,9,0,1,2,1,1,3,2,1,1,1,2,9,0,2,2,1,1,1,2,1,1,2,2,10,0,2,2,1,1,2,2,12,0,3,2,107,0,7,2,9,0,1,2,5,1,1,2,9,0,7,2,314,0,3,2,12,0,2,2,1,1,1,2,12,0,1,2,1,1,2,2,12,0,1,2,1,1,1,2,13,0,3,2,110,0,6,2,9,0,2,2,2,1,1,2,1,1,1,2,9,0,1,2,1,1,2,2,2,1,1,2,9,0,1,2,1,1,1,2,1,0,1,2,1,1,1,2,9,0,1,2,1,1,3,2,1,1,1,2,9,0,2,2,3,1,2,2,10,0,5,2,154,0,6,2,10,0,1,2,4,1,2,2,9,0,1,2,1,1,3,2,1,1,1,2,9,0,1,2,1,1,1,2,1,0,1,2,1,1,1,2,9,0,1,2,1,1,3,2,1,1,1,2,9,0,1,2,4,1,2,2,9,0,1,2,1,1,4,2,10,0,1,2,1,1,1,2,13,0,3,2,126,0,6,2,9,0,2,2,4,1,1,2,9,0,1,2,1,1,5,2,9,0,1,2,1,1,1,2,13,0,1,2,1,1,5,2,9,0,2,2,4,1,1,2,10,0,6,2,154,0,6,2,9,0,2,2,4,1,1,2,9,0,1,2,1,1,3,2,1,1,1,2,9,0,1,2,1,1,1,2,1,0,1,2,1,1,1,2,9,0,1,2,1,1,3,2,1,1,1,2,9,0,2,2,4,1,1,2,10,0,4,2,1,1,1,2,13,0,1,2,1,1,1,2,13,0,3,2,122,0,5,2,10,0,2,2,3,1,1,2,10,0,1,2,1,1,5,2,9,0,1,2,5,1,1,2,9,0,1,2,1,1,3,2,1,1,1,2,9,0,2,2,3,1,2,2,10,0,5,2,154,0,3,2,13,0,1,2,1,1,1,2,13,0,1,2,1,1,1,2,13,0,1,2,1,1,3,2,11,0,1,2,3,1,1,2,11,0,1,2,1,1,5,2,9,0,1,2,1,1,3,2,1,1,1,2,9,0,2,2,3,1,2,2,10,0,5,2,91,0,5,2,11,0,1,2,3,1,2,2,10,0,4,2,1,1,1,2,9,0,2,2,4,1,1,2,9,0,1,2,1,1,3,2,1,1,1,2,9,0,1,2,1,1,1,2,1,0,1,2,1,1,1,2,9,0,1,2,1,1,3,2,1,1,1,2,9,0,2,2,3,1,2,2,10,0,5,2,154,0,3,2,1,0,3,2,9,0,1,2,1,1,1,2,1,0,1,2,1,1,1,2,9,0,1,2,1,1,1,2,1,0,1,2,1,1,1,2,9,0,1,2,1,1,1,2,1,0,1,2,1,1,1,2,9,0,1,2,1,1,3,2,1,1,1,2,9,0,1,2,4,1,2,2,9,0,1,2,1,1,4,2,10,0,1,2,1,1,1,2,13,0,3,2,125,0,3,2,13,0,1,2,1,1,1,2,13,0,1,2,1,1,1,2,13,0,1,2,1,1,1,2,13,0,1,2,1,1,1,2,13,0,1,2,1,1,1,2,13,0,3,2,13,0,1,2,1,1,1,2,13,0,3,2,94,0,5,2,10,0,2,2,3,1,2,2,9,0,1,2,1,1,3,2,1,1,1,2,9,0,3,2,1,0,1,2,1,1,1,2,13,0,1,2,1,1,1,2,13,0,1,2,1,1,1,2,13,0,1,2,1,1,1,2,13,0,1,2,1,1,1,2,13,0,3,2,13,0,1,2,1,1,1,2,13,0,3,2,121,0,6,2,10,0,1,2,1,1,2,2,1,1,1,2,10,0,1,2,1,1,1,2,1,1,2,2,10,0,1,2,2,1,2,2,11,0,1,2,1,1,1,2,1,1,2,2,10,0,1,2,1,1,2,2,1,1,1,2,10,0,1,2,1,1,4,2,10,0,1,2,1,1,1,2,13,0,3,2,125,0,3,2,13,0,1,2,1,1,1,2,13,0,1,2,1,1,1,2,13,0,1,2,1,1,1,2,13,0,1,2,1,1,1,2,13,0,1,2,1,1,1,2,13,0,1,2,1,1,1,2,13,0,1,2,1,1,1,2,13,0,3,2,125,0,3,2,1,0,3,2,9,0,1,2,1,1,1,2,1,0,1,2,1,1,1,2,9,0,1,2,1,1,3,2,1,1,1,2,9,0,1,2,1,1,1,2,1,1,1,2,1,1,1,2,9,0,1,2,1,1,1,2,1,1,1,2,1,1,1,2,9,0,2,2,3,1,2,2,10,0,5,2,154,0,3,2,1,0,3,2,9,0,1,2,1,1,1,2,1,0,1,2,1,1,1,2,9,0,1,2,1,1,1,2,1,0,1,2,1,1,1,2,9,0,1,2,1,1,1,2,1,0,1,2,1,1,1,2,9,0,1,2,1,1,3,2,1,1,1,2,9,0,2,2,3,1,2,2,10,0,5,2,155,0,5,2,10,0,2,2,3,1,2,2,9,0,1,2,1,1,3,2,1,1,1,2,9,0,1,2,1,1,1,2,1,0,1,2,1,1,1,2,9,0,1,2,1,1,3,2,1,1,1,2,9,0,2,2,3,1,2,2,10,0,5,2,122,0,3,2,13,0,1,2,1,1,1,2,13,0,1,2,1,1,4,2,10,0,1,2,4,1,2,2,9,0,1,2,1,1,3,2,1,1,1,2,9,0,1,2,1,1,1,2,1,0,1,2,1,1,1,2,9,0,1,2,1,1,3,2,1,1,1,2,9,0,1,2,4,1,2,2,9,0,6,2,126,0,4,2,12,0,1,2,2,1,1,2,9,0,4,2,1,1,2,2,8,0,2,2,4,1,1,2,9,0,1,2,1,1,3,2,1,1,1,2,9,0,1,2,1,1,1,2,1,0,1,2,1,1,1,2,9,0,1,2,1,1,3,2,1,1,1,2,9,0,2,2,3,1,2,2,10,0,5,2,154,0,3,2,13,0,1,2,1,1,1,2,13,0,1,2,1,1,1,2,13,0,1,2,1,1,2,2,12,0,1,2,2,1,4,2,9,0,1,2,1,1,1,2,3,1,1,2,9,0,7,2,153,0,6,2,10,0,1,2,4,1,2,2,9,0,5,2,1,1,1,2,9,0,2,2,3,1,2,2,9,0,1,2,1,1,5,2,9,0,2,2,4,1,1,2,10,0,6,2,155,0,3,2,13,0,1,2,1,1,1,2,13,0,1,2,1,1,1,2,13,0,1,2,1,1,1,2,11,0,3,2,1,1,3,2,9,0,1,2,5,1,1,2,9,0,3,2,1,1,3,2,11,0,1,2,1,1,1,2,13,0,3,2,124,0,5,2,10,0,2,2,3,1,2,2,9,0,1,2,1,1,3,2,1,1,1,2,9,0,1,2,1,1,1,2,1,0,1,2,1,1,1,2,9,0,1,2,1,1,1,2,1,0,1,2,1,1,1,2,9,0,1,2,1,1,1,2,1,0,1,2,1,1,1,2,9,0,3,2,1,0,3,2,155,0,3,2,12,0,2,2,1,1,2,2,10,0,2,2,1,1,1,2,1,1,2,2,9,0,1,2,1,1,3,2,1,1,1,2,9,0,1,2,1,1,1,2,1,0,1,2,1,1,1,2,9,0,1,2,1,1,1,2,1,0,1,2,1,1,1,2,9,0,3,2,1,0,3,2,154,0,5,2,10,0,2,2,3,1,2,2,9,0,1,2,1,1,1,2,1,1,1,2,1,1,1,2,9,0,1,2,1,1,1,2,1,1,1,2,1,1,1,2,9,0,1,2,1,1,3,2,1,1,1,2,9,0,1,2,1,1,1,2,1,0,1,2,1,1,1,2,9,0,3,2,1,0,3,2,153,0,3,2,1,0,3,2,9,0,1,2,1,1,3,2,1,1,1,2,9,0,2,2,1,1,1,2,1,1,2,2,10,0,2,2,1,1,2,2,10,0,2,2,1,1,1,2,1,1,2,2,9,0,1,2,1,1,3,2,1,1,1,2,9,0,3,2,1,0,3,2,122,0,5,2,11,0,1,2,3,1,2,2,10,0,4,2,1,1,1,2,9,0,2,2,4,1,1,2,9,0,1,2,1,1,3,2,1,1,1,2,9,0,1,2,1,1,1,2,1,0,1,2,1,1,1,2,9,0,1,2,1,1,1,2,1,0,1,2,1,1,1,2,9,0,1,2,1,1,1,2,1,0,1,2,1,1,1,2,9,0,3,2,1,0,3,2,153,0,7,2,9,0,1,2,5,1,1,2,9,0,2,2,1,1,4,2,10,0,2,2,1,1,2,2,10,0,4,2,1,1,2,2,9,0,1,2,5,1,1,2,9,0,7,2,139,0,3,2,12,0,2,2,1,1,1,2,12,0,1,2,1,1,2,2,12,0,1,2,1,1,1,2,12,0,2,2,1,1,1,2,12,0,1,2,1,1,2,2,12,0,2,2,1,1,1,2,13,0,1,2,1,1,1,2,13,0,1,2,1,1,2,2,12,0,2,2,1,1,1,2,13,0,3,2,91,0,3,2,13,0,1,2,1,1,1,2,13,0,1,2,1,1,1,2,13,0,1,2,1,1,1,2,13,0,1,2,1,1,1,2,13,0,1,2,1,1,1,2,13,0,1,2,1,1,1,2,13,0,1,2,1,1,1,2,13,0,1,2,1,1,1,2,13,0,1,2,1,1,1,2,13,0,3,2,93,0,3,2,13,0,1,2,1,1,2,2,12,0,2,2,1,1,1,2,13,0,1,2,1,1,1,2,13,0,1,2,1,1,2,2,12,0,2,2,1,1,1,2,12,0,1,2,1,1,2,2,12,0,1,2,1,1,1,2,12,0,2,2,1,1,1,2,12,0,1,2,1,1,2,2,12,0,3,2,157,0,6,2,10,0,1,2,1,1,1,2,2,1,2,2,9,0,2,2,2,1,1,2,1,1,1,2,10,0,6,2,8857,0,5,2,11,0,1,2,3,1,1,2,11,0,1,2,3,1,1,2,11,0,1,2,3,1,1,2,11,0,1,2,3,1,1,2,11,0,2,2,1,1,2,2,12,0,3,2,13,0,1,2,1,1,1,2,13,0,3,2,126,0,3,2,11,0,3,2,1,1,3,2,9,0,1,2,5,1,1,2,9,0,1,2,1,1,1,2,1,1,3,2,9,0,1,2,1,1,1,2,1,1,3,2,9,0,1,2,5,1,1,2,9,0,3,2,1,1,3,2,11,0,3,2,139,0,7,2,9,0,1,2,5,1,1,2,9,0,2,2,1,1,4,2,9,0,2,2,1,1,2,2,11,0,1,2,3,1,1,2,11,0,2,2,1,1,2,2,11,0,1,2,1,1,5,2,9,0,1,2,1,1,3,2,1,1,1,2,9,0,2,2,3,1,2,2,10,0,5,2,122,0,3,2,3,0,3,2,7,0,1,2,1,1,5,2,1,1,1,2,7,0,2,2,5,1,2,2,8,0,1,2,1,1,3,2,1,1,1,2,9,0,1,2,1,1,1,2,1,0,1,2,1,1,1,2,9,0,1,2,1,1,3,2,1,1,1,2,8,0,2,2,5,1,2,2,7,0,1,2,1,1,5,2,1,1,1,2,7,0,3,2,3,0,3,2,106,0,3,2,12,0,2,2,1,1,2,2,11,0,1,2,3,1,1,2,11,0,2,2,1,1,2,2,11,0,1,2,3,1,1,2,11,0,2,2,1,1,2,2,10,0,2,2,1,1,1,2,1,1,2,2,8,0,2,2,1,1,3,2,1,1,2,2,7,0,1,2,1,1,2,2,1,0,2,2,1,1,1,2,7,0,3,2,3,0,3,2,103,0,3,2,13,0,1,2,1,1,1,2,13,0,1,2,1,1,1,2,13,0,1,2,1,1,1,2,13,0,3,2,13,0,1,2,1,1,1,2,13,0,1,2,1,1,1,2,13,0,1,2,1,1,1,2,13,0,3,2,110,0,5,2,10,0,2,2,3,1,2,2,9,0,1,2,1,1,3,2,1,1,1,2,9,0,5,2,1,1,1,2,9,0,2,2,4,1,2,2,8,0,1,2,1,1,4,2,1,1,1,2,8,0,1,2,1,1,4,2,1,1,1,2,8,0,2,2,4,1,2,2,9,0,1,2,1,1,5,2,9,0,1,2,1,1,3,2,1,1,1,2,9,0,2,2,3,1,2,2,10,0,5,2,218,0,5,2,11,0,1,2,1,1,1,2,1,1,1,2,11,0,5,2,92,0,5,2,10,0,2,2,3,1,2,2,8,0,2,2,1,1,3,2,1,1,2,2,7,0,1,2,1,1,1,2,3,1,1,2,1,1,1,2,7,0,1,2,1,1,1,2,1,1,3,2,1,1,1,2,7,0,1,2,1,1,1,2,3,1,1,2,1,1,1,2,7,0,2,2,1,1,3,2,1,1,2,2,8,0,2,2,3,1,2,2,10,0,5,2,169,0,6,2,10,0,1,2,4,1,1,2,10,0,6,2,10,0,2,2,1,1,1,2,1,1,1,2,10,0,1,2,1,1,1,2,2,1,1,2,10,0,1,2,1,1,2,2,1,1,1,2,10,0,2,2,2,1,2,2,11,0,4,2,109,0,6,2,9,0,2,2,1,1,2,2,1,1,1,2,8,0,2,2,1,1,2,2,1,1,2,2,8,0,1,2,1,1,2,2,1,1,2,2,9,0,2,2,1,1,2,2,1,1,2,2,9,0,2,2,1,1,2,2,1,1,1,2,10,0,6,2,173,0,3,2,13,0,1,2,1,1,1,2,8,0,6,2,1,1,1,2,8,0,1,2,6,1,1,2,8,0,8,2,410,0,6,2,9,0,2,2,4,1,2,2,7,0,2,2,2,1,2,2,2,1,2,2,6,0,1,2,1,1,1,2,1,1,2,2,1,1,1,2,1,1,1,2,6,0,1,2,1,1,1,2,3,1,2,2,1,1,1,2,6,0,1,2,1,1,1,2,1,1,2,2,1,1,1,2,1,1,1,2,6,0,1,2,1,1,1,2,4,1,1,2,1,1,1,2,6,0,2,2,1,1,4,2,1,1,2,2,7,0,2,2,4,1,2,2,9,0,6,2,200,0,7,2,9,0,1,2,5,1,1,2,9,0,7,2,186,0,4,2,11,0,2,2,2,1,2,2,10,0,1,2,1,1,2,2,1,1,1,2,10,0,1,2,1,1,2,2,1,1,1,2,10,0,2,2,2,1,2,2,11,0,4,2,107,0,7,2,9,0,1,2,5,1,1,2,9,0,7,2,11,0,1,2,1,1,1,2,11,0,3,2,1,1,3,2,9,0,1,2,5,1,1,2,9,0,3,2,1,1,3,2,11,0,1,2,1,1,1,2,13,0,3,2,187,0,5,2,11,0,1,2,3,1,1,2,11,0,1,2,2,1,2,2,11,0,3,2,1,1,1,2,11,0,1,2,2,1,2,2,11,0,4,2,172,0,5,2,11,0,1,2,3,1,1,2,11,0,2,2,2,1,1,2,11,0,3,2,1,1,1,2,11,0,1,2,3,1,1,2,11,0,5,2,187,0,3,2,13,0,1,2,1,1,2,2,12,0,1,2,2,1,1,2,12,0,2,2,1,1,1,2,13,0,3,2,76,0,3,2,13,0,1,2,1,1,1,2,13,0,1,2,1,1,5,2,9,0,1,2,3,1,1,2,1,1,1,2,9,0,1,2,1,1,2,2,2,1,1,2,9,0,1,2,1,1,3,2,1,1,1,2,9,0,1,2,1,1,1,2,1,0,1,2,1,1,1,2,9,0,1,2,1,1,1,2,1,0,1,2,1,1,1,2,9,0,3,2,1,0,3,2,153,0,5,2,11,0,1,2,1,1,1,2,1,1,1,2,11,0,1,2,1,1,1,2,1,1,1,2,11,0,1,2,1,1,1,2,1,1,1,2,11,0,1,2,1,1,1,2,1,1,1,2,10,0,2,2,1,1,1,2,1,1,1,2,10,0,1,2,2,1,1,2,1,1,1,2,10,0,1,2,2,1,1,2,1,1,1,2,10,0,1,2,2,1,1,2,1,1,1,2,10,0,2,2,3,1,1,2,11,0,5,2,139,0,3,2,13,0,1,2,1,1,1,2,13,0,3,2,142,0,5,2,11,0,1,2,3,1,1,2,11,0,3,2,1,1,1,2,12,0,1,2,1,1,2,2,12,0,3,2,283,0,5,2,11,0,1,2,3,1,1,2,11,0,2,2,1,1,2,2,11,0,2,2,1,1,1,2,12,0,1,2,2,1,1,2,12,0,4,2,156,0,6,2,10,0,1,2,4,1,1,2,10,0,6,2,10,0,2,2,2,1,2,2,10,0,1,2,1,1,2,0,1,1,1,2,10,0,1,2,1,1,2,0,1,1,1,2,10,0,2,2,2,1,2,2,11,0,4,2,107,0,6,2,10,0,1,2,1,1,2,2,1,1,2,2,9,0,2,2,1,1,2,2,1,1,2,2,9,0,2,2,1,1,2,2,1,1,1,2,8,0,2,2,1,1,2,2,1,1,2,2,8,0,1,2,1,1,2,2,1,1,2,2,9,0,6,2,144,0,3,2,11,0,3,2,1,1,1,2,8,0,4,2,3,1,1,2,8,0,1,2,1,1,2,2,1,1,1,2,1,1,1,2,8,0,2,2,1,1,5,2,8,0,3,2,1,1,2,2,10,0,1,2,1,1,2,2,1,1,1,2,10,0,1,2,1,1,4,2,10,0,1,2,1,1,1,2,13,0,3,2,112,0,6,2,10,0,1,2,4,1,1,2,7,0,6,2,1,1,2,2,7,0,1,2,1,1,2,2,3,1,1,2,8,0,2,2,1,1,5,2,8,0,3,2,1,1,2,2,10,0,1,2,1,1,2,2,1,1,1,2,10,0,1,2,1,1,4,2,10,0,1,2,1,1,1,2,13,0,3,2,114,0,3,2,11,0,3,2,1,1,1,2,8,0,4,2,3,1,1,2,8,0,1,2,1,1,2,2,1,1,1,2,1,1,1,2,8,0,2,2,1,1,5,2,7,0,4,2,1,1,2,2,9,0,1,2,3,1,1,2,1,1,1,2,9,0,2,2,2,1,3,2,9,0,1,2,3,1,1,2,11,0,5,2,108,0,5,2,10,0,2,2,3,1,2,2,9,0,1,2,1,1,3,2,1,1,1,2,9,0,1,2,1,1,5,2,9,0,2,2,2,1,1,2,12,0,2,2,1,1,1,2,13,0,3,2,13,0,1,2,1,1,1,2,13,0,3,2,123,0,3,2,1,0,3,2,9,0,1,2,1,1,1,2,1,0,1,2,1,1,1,2,9,0,1,2,1,1,3,2,1,1,1,2,9,0,1,2,5,1,1,2,9,0,1,2,1,1,3,2,1,1,1,2,9,0,1,2,1,1,3,2,1,1,1,2,9,0,2,2,1,1,1,2,1,1,2,2,10,0,2,2,1,1,2,2,12,0,4,2,12,0,2,2,1,1,1,2,11,0,2,2,1,1,2,2,11,0,1,2,1,1,2,2,12,0,3,2,60,0,3,2,1,0,3,2,9,0,1,2,1,1,1,2,1,0,1,2,1,1,1,2,9,0,1,2,1,1,3,2,1,1,1,2,9,0,1,2,5,1,1,2,9,0,1,2,1,1,3,2,1,1,1,2,9,0,1,2,1,1,3,2,1,1,1,2,9,0,2,2,1,1,1,2,1,1,2,2,10,0,2,2,1,1,2,2,11,0,4,2,12,0,1,2,1,1,2,2,12,0,2,2,1,1,2,2,12,0,2,2,1,1,1,2,13,0,3,2,58,0,3,2,1,0,3,2,9,0,1,2,1,1,1,2,1,0,1,2,1,1,1,2,9,0,1,2,1,1,3,2,1,1,1,2,9,0,1,2,5,1,1,2,9,0,1,2,1,1,3,2,1,1,1,2,9,0,1,2,1,1,3,2,1,1,1,2,9,0,2,2,1,1,1,2,1,1,2,2,10,0,2,2,1,1,2,2,11,0,5,2,11,0,1,2,1,1,1,2,1,1,1,2,11,0,2,2,1,1,2,2,12,0,3,2,75,0,3,2,1,0,3,2,9,0,1,2,1,1,1,2,1,0,1,2,1,1,1,2,9,0,1,2,1,1,3,2,1,1,1,2,9,0,1,2,5,1,1,2,9,0,1,2,1,1,3,2,1,1,1,2,9,0,1,2,1,1,3,2,1,1,1,2,9,0,2,2,1,1,1,2,1,1,2,2,10,0,2,2,1,1,2,2,11,0,5,2,11,0,1,2,1,1,1,2,1,1,2,2,10,0,2,2,1,1,1,2,1,1,1,2,11,0,5,2,73,0,3,2,1,0,3,2,9,0,1,2,1,1,1,2,1,0,1,2,1,1,1,2,9,0,1,2,1,1,3,2,1,1,1,2,9,0,1,2,5,1,1,2,9,0,1,2,1,1,3,2,1,1,1,2,9,0,1,2,1,1,3,2,1,1,1,2,9,0,2,2,1,1,1,2,1,1,2,2,10,0,2,2,1,1,2,2,11,0,5,2,11,0,1,2,1,1,1,2,1,1,1,2,11,0,5,2,90,0,3,2,1,0,3,2,9,0,1,2,1,1,1,2,1,0,1,2,1,1,1,2,9,0,1,2,1,1,3,2,1,1,1,2,9,0,1,2,5,1,1,2,9,0,1,2,1,1,3,2,1,1,1,2,9,0,1,2,1,1,3,2,1,1,1,2,9,0,2,2,1,1,1,2,1,1,2,2,10,0,2,2,1,1,2,2,12,0,3,2,12,0,2,2,1,1,2,2,11,0,1,2,1,1,1,2,1,1,1,2,11,0,2,2,1,1,2,2,12,0,3,2,59,0,3,2,1,0,6,2,6,0,1,2,1,1,1,2,1,0,1,2,4,1,1,2,6,0,1,2,1,1,3,2,1,1,4,2,6,0,1,2,5,1,3,2,7,0,2,2,1,1,2,2,3,1,1,2,8,0,2,2,1,1,1,2,1,1,3,2,9,0,2,2,2,1,4,2,9,0,2,2,4,1,1,2,10,0,6,2,71,0,5,2,11,0,1,2,3,1,1,2,11,0,3,2,1,1,1,2,11,0,2,2,1,1,2,2,10,0,2,2,3,1,2,2,9,0,1,2,1,1,3,2,1,1,1,2,9,0,1,2,1,1,1,2,1,0,3,2,9,0,1,2,1,1,1,2,13,0,1,2,1,1,1,2,1,0,3,2,9,0,1,2,1,1,3,2,1,1,1,2,9,0,2,2,3,1,2,2,10,0,5,2,122,0,7,2,9,0,1,2,5,1,1,2,9,0,1,2,1,1,5,2,9,0,1,2,1,1,4,2,10,0,1,2,4,1,1,2,10,0,1,2,1,1,4,2,10,0,1,2,1,1,5,2,9,0,1,2,5,1,1,2,9,0,7,2,11,0,2,2,1,1,1,2,11,0,2,2,1,1,2,2,11,0,1,2,1,1,2,2,12,0,3,2,60,0,7,2,9,0,1,2,5,1,1,2,9,0,1,2,1,1,5,2,9,0,1,2,1,1,4,2,10,0,1,2,4,1,1,2,10,0,1,2,1,1,4,2,10,0,1,2,1,1,5,2,9,0,1,2,5,1,1,2,9,0,7,2,10,0,1,2,1,1,2,2,12,0,2,2,1,1,2,2,12,0,2,2,1,1,1,2,13,0,3,2,58,0,7,2,9,0,1,2,5,1,1,2,9,0,1,2,1,1,5,2,9,0,1,2,1,1,4,2,10,0,1,2,4,1,1,2,10,0,1,2,1,1,4,2,10,0,1,2,1,1,5,2,9,0,1,2,5,1,1,2,9,0,7,2,10,0,1,2,1,1,1,2,1,1,1,2,11,0,2,2,1,1,2,2,12,0,3,2,75,0,7,2,9,0,1,2,5,1,1,2,9,0,1,2,1,1,5,2,9,0,1,2,1,1,4,2,10,0,1,2,4,1,1,2,10,0,1,2,1,1,4,2,10,0,1,2,1,1,5,2,9,0,1,2,5,1,1,2,9,0,7,2,10,0,1,2,1,1,1,2,1,1,1,2,11,0,5,2,90,0,7,2,9,0,1,2,5,1,1,2,9,0,3,2,1,1,3,2,11,0,1,2,1,1,1,2,13,0,1,2,1,1,1,2,13,0,1,2,1,1,1,2,11,0,3,2,1,1,3,2,9,0,1,2,5,1,1,2,9,0,7,2,11,0,2,2,1,1,1,2,11,0,2,2,1,1,2,2,11,0,1,2,1,1,2,2,12,0,3,2,60,0,7,2,9,0,1,2,5,1,1,2,9,0,3,2,1,1,3,2,11,0,1,2,1,1,1,2,13,0,1,2,1,1,1,2,13,0,1,2,1,1,1,2,11,0,3,2,1,1,3,2,9,0,1,2,5,1,1,2,9,0,7,2,10,0,1,2,1,1,2,2,12,0,2,2,1,1,2,2,12,0,2,2,1,1,1,2,13,0,3,2,58,0,7,2,9,0,1,2,5,1,1,2,9,0,3,2,1,1,3,2,11,0,1,2,1,1,1,2,13,0,1,2,1,1,1,2,13,0,1,2,1,1,1,2,11,0,3,2,1,1,3,2,9,0,1,2,5,1,1,2,9,0,7,2,10,0,1,2,1,1,1,2,1,1,1,2,11,0,2,2,1,1,2,2,12,0,3,2,75,0,7,2,9,0,1,2,5,1,1,2,9,0,3,2,1,1,3,2,11,0,1,2,1,1,1,2,13,0,1,2,1,1,1,2,13,0,1,2,1,1,1,2,11,0,3,2,1,1,3,2,9,0,1,2,5,1,1,2,9,0,7,2,10,0,1,2,1,1,1,2,1,1,1,2,11,0,5,2,90,0,6,2,10,0,1,2,4,1,2,2,9,0,1,2,1,1,3,2,1,1,1,2,8,0,2,2,1,1,3,2,1,1,1,2,8,0,1,2,3,1,2,2,1,1,1,2,8,0,2,2,1,1,3,2,1,1,1,2,9,0,1,2,1,1,3,2,1,1,1,2,9,0,1,2,4,1,2,2,9,0,6,2,122,0,3,2,1,0,3,2,9,0,1,2,1,1,1,2,1,0,1,2,1,1,1,2,9,0,1,2,1,1,1,2,1,0,1,2,1,1,1,2,9,0,1,2,1,1,3,2,1,1,1,2,9,0,1,2,1,1,2,2,2,1,1,2,9,0,1,2,1,1,1,2,1,1,1,2,1,1,1,2,9,0,1,2,2,1,2,2,1,1,1,2,9,0,1,2,1,1,3,2,1,1,1,2,9,0,7,2,10,0,1,2,1,1,1,2,1,1,2,2,10,0,2,2,1,1,1,2,1,1,1,2,11,0,5,2,74,0,5,2,10,0,2,2,3,1,2,2,9,0,1,2,1,1,3,2,1,1,1,2,9,0,1,2,1,1,1,2,1,0,1,2,1,1,1,2,9,0,1,2,1,1,1,2,1,0,1,2,1,1,1,2,9,0,1,2,1,1,1,2,1,0,1,2,1,1,1,2,9,0,1,2,1,1,3,2,1,1,1,2,9,0,2,2,3,1,2,2,10,0,5,2,12,0,2,2,1,1,1,2,11,0,2,2,1,1,2,2,11,0,1,2,1,1,2,2,12,0,3,2,61,0,5,2,10,0,2,2,3,1,2,2,9,0,1,2,1,1,3,2,1,1,1,2,9,0,1,2,1,1,1,2,1,0,1,2,1,1,1,2,9,0,1,2,1,1,1,2,1,0,1,2,1,1,1,2,9,0,1,2,1,1,1,2,1,0,1,2,1,1,1,2,9,0,1,2,1,1,3,2,1,1,1,2,9,0,2,2,3,1,2,2,10,0,5,2,11,0,1,2,1,1,2,2,12,0,2,2,1,1,2,2,12,0,2,2,1,1,1,2,13,0,3,2,59,0,5,2,10,0,2,2,3,1,2,2,9,0,1,2,1,1,3,2,1,1,1,2,9,0,1,2,1,1,1,2,1,0,1,2,1,1,1,2,9,0,1,2,1,1,1,2,1,0,1,2,1,1,1,2,9,0,1,2,1,1,1,2,1,0,1,2,1,1,1,2,9,0,1,2,1,1,3,2,1,1,1,2,9,0,2,2,3,1,2,2,10,0,5,2,11,0,1,2,1,1,1,2,1,1,1,2,11,0,2,2,1,1,2,2,12,0,3,2,76,0,5,2,10,0,2,2,3,1,2,2,9,0,1,2,1,1,3,2,1,1,1,2,9,0,1,2,1,1,1,2,1,0,1,2,1,1,1,2,9,0,1,2,1,1,1,2,1,0,1,2,1,1,1,2,9,0,1,2,1,1,1,2,1,0,1,2,1,1,1,2,9,0,1,2,1,1,3,2,1,1,1,2,9,0,2,2,3,1,2,2,10,0,5,2,11,0,1,2,1,1,1,2,1,1,2,2,10,0,2,2,1,1,1,2,1,1,1,2,11,0,5,2,74,0,5,2,10,0,2,2,3,1,2,2,9,0,1,2,1,1,3,2,1,1,1,2,9,0,1,2,1,1,1,2,1,0,1,2,1,1,1,2,9,0,1,2,1,1,1,2,1,0,1,2,1,1,1,2,9,0,1,2,1,1,1,2,1,0,1,2,1,1,1,2,9,0,1,2,1,1,3,2,1,1,1,2,9,0,2,2,3,1,2,2,10,0,5,2,11,0,1,2,1,1,1,2,1,1,1,2,11,0,5,2,90,0,3,2,1,0,3,2,9,0,1,2,1,1,3,2,1,1,1,2,9,0,2,2,1,1,1,2,1,1,2,2,10,0,2,2,1,1,2,2,10,0,2,2,1,1,1,2,1,1,2,2,9,0,1,2,1,1,3,2,1,1,1,2,9,0,3,2,1,0,3,2,136,0,3,2,13,0,1,2,1,1,5,2,9,0,2,2,4,1,2,2,9,0,1,2,2,1,2,2,1,1,1,2,9,0,1,2,1,1,1,2,1,1,1,2,1,1,1,2,9,0,1,2,1,1,1,2,1,1,1,2,1,1,1,2,9,0,1,2,1,1,1,2,1,1,1,2,1,1,1,2,9,0,1,2,1,1,2,2,2,1,1,2,9,0,2,2,4,1,2,2,9,0,5,2,1,1,1,2,13,0,3,2,105,0,5,2,10,0,2,2,3,1,2,2,9,0,1,2,1,1,3,2,1,1,1,2,9,0,1,2,1,1,1,2,1,0,1,2,1,1,1,2,9,0,1,2,1,1,1,2,1,0,1,2,1,1,1,2,9,0,1,2,1,1,1,2,1,0,1,2,1,1,1,2,9,0,1,2,1,1,1,2,1,0,1,2,1,1,1,2,9,0,1,2,1,1,1,2,1,0,1,2,1,1,1,2,9,0,7,2,11,0,2,2,1,1,1,2,11,0,2,2,1,1,2,2,11,0,1,2,1,1,2,2,12,0,3,2,61,0,5,2,10,0,2,2,3,1,2,2,9,0,1,2,1,1,3,2,1,1,1,2,9,0,1,2,1,1,1,2,1,0,1,2,1,1,1,2,9,0,1,2,1,1,1,2,1,0,1,2,1,1,1,2,9,0,1,2,1,1,1,2,1,0,1,2,1,1,1,2,9,0,1,2,1,1,1,2,1,0,1,2,1,1,1,2,9,0,1,2,1,1,1,2,1,0,1,2,1,1,1,2,9,0,7,2,10,0,1,2,1,1,2,2,12,0,2,2,1,1,2,2,12,0,2,2,1,1,1,2,13,0,3,2,59,0,5,2,10,0,2,2,3,1,2,2,9,0,1,2,1,1,3,2,1,1,1,2,9,0,1,2,1,1,1,2,1,0,1,2,1,1,1,2,9,0,1,2,1,1,1,2,1,0,1,2,1,1,1,2,9,0,1,2,1,1,1,2,1,0,1,2,1,1,1,2,9,0,1,2,1,1,1,2,1,0,1,2,1,1,1,2,9,0,1,2,1,1,1,2,1,0,1,2,1,1,1,2,9,0,7,2,10,0,1,2,1,1,1,2,1,1,1,2,11,0,2,2,1,1,2,2,12,0,3,2,76,0,5,2,10,0,2,2,3,1,2,2,9,0,1,2,1,1,3,2,1,1,1,2,9,0,1,2,1,1,1,2,1,0,1,2,1,1,1,2,9,0,1,2,1,1,1,2,1,0,1,2,1,1,1,2,9,0,1,2,1,1,1,2,1,0,1,2,1,1,1,2,9,0,1,2,1,1,1,2,1,0,1,2,1,1,1,2,9,0,1,2,1,1,1,2,1,0,1,2,1,1,1,2,9,0,7,2,10,0,1,2,1,1,1,2,1,1,1,2,11,0,5,2,92,0,3,2,13,0,1,2,1,1,1,2,13,0,1,2,1,1,1,2,13,0,1,2,1,1,1,2,12,0,2,2,1,1,2,2,10,0,2,2,1,1,1,2,1,1,2,2,9,0,1,2,1,1,3,2,1,1,1,2,9,0,1,2,1,1,1,2,1,0,1,2,1,1,1,2,9,0,7,2,10,0,1,2,1,1,2,2,12,0,2,2,1,1,2,2,12,0,2,2,1,1,1,2,13,0,3,2,58,0,5,2,11,0,1,2,3,1,1,2,11,0,2,2,1,1,3,2,11,0,1,2,3,1,2,2,10,0,1,2,1,1,2,2,1,1,1,2,10,0,1,2,1,1,2,2,1,1,1,2,10,0,1,2,1,1,2,2,1,1,1,2,10,0,1,2,3,1,2,2,9,0,2,2,1,1,3,2,10,0,1,2,3,1,1,2,11,0,5,2,91,0,6,2,10,0,1,2,1,1,1,2,2,1,2,2,9,0,1,2,2,1,2,2,1,1,1,2,9,0,1,2,1,1,3,2,1,1,1,2,9,0,1,2,1,1,3,2,1,1,1,2,9,0,1,2,4,1,2,2,9,0,1,2,1,1,2,2,1,1,2,2,9,0,1,2,1,1,3,2,1,1,1,2,9,0,1,2,1,1,3,2,1,1,1,2,9,0,1,2,4,1,2,2,9,0,6,2,91,0,6,2,9,0,2,2,2,1,1,2,1,1,1,2,9,0,1,2,1,1,2,2,2,1,1,2,9,0,1,2,1,1,1,2,1,0,1,2,1,1,1,2,9,0,1,2,1,1,3,2,1,1,1,2,9,0,2,2,3,1,2,2,10,0,5,2,12,0,2,2,1,1,1,2,11,0,2,2,1,1,2,2,11,0,1,2,1,1,2,2,12,0,3,2,93,0,6,2,9,0,2,2,2,1,1,2,1,1,1,2,9,0,1,2,1,1,2,2,2,1,1,2,9,0,1,2,1,1,1,2,1,0,1,2,1,1,1,2,9,0,1,2,1,1,3,2,1,1,1,2,9,0,2,2,3,1,2,2,10,0,5,2,11,0,1,2,1,1,2,2,12,0,2,2,1,1,2,2,12,0,2,2,1,1,1,2,13,0,3,2,91,0,6,2,9,0,2,2,2,1,1,2,1,1,1,2,9,0,1,2,1,1,2,2,2,1,1,2,9,0,1,2,1,1,1,2,1,0,1,2,1,1,1,2,9,0,1,2,1,1,3,2,1,1,1,2,9,0,2,2,3,1,2,2,10,0,5,2,11,0,1,2,1,1,1,2,1,1,1,2,11,0,2,2,1,1,2,2,12,0,3,2,108,0,6,2,9,0,2,2,2,1,1,2,1,1,1,2,9,0,1,2,1,1,2,2,2,1,1,2,9,0,1,2,1,1,1,2,1,0,1,2,1,1,1,2,9,0,1,2,1,1,3,2,1,1,1,2,9,0,2,2,3,1,2,2,10,0,5,2,11,0,1,2,1,1,1,2,1,1,2,2,10,0,2,2,1,1,1,2,1,1,1,2,11,0,5,2,106,0,6,2,9,0,2,2,2,1,1,2,1,1,1,2,9,0,1,2,1,1,2,2,2,1,1,2,9,0,1,2,1,1,1,2,1,0,1,2,1,1,1,2,9,0,1,2,1,1,3,2,1,1,1,2,9,0,2,2,3,1,2,2,10,0,5,2,11,0,1,2,1,1,1,2,1,1,1,2,11,0,5,2,123,0,6,2,9,0,2,2,2,1,1,2,1,1,1,2,9,0,1,2,1,1,2,2,2,1,1,2,9,0,1,2,1,1,1,2,1,0,1,2,1,1,1,2,9,0,1,2,1,1,3,2,1,1,1,2,9,0,2,2,3,1,2,2,10,0,5,2,11,0,2,2,1,1,2,2,11,0,1,2,1,1,1,2,1,1,1,2,11,0,2,2,1,1,2,2,12,0,3,2,92,0,8,2,7,0,2,2,1,1,1,2,4,1,1,2,7,0,1,2,1,1,1,2,2,1,5,2,6,0,1,2,1,1,2,2,5,1,1,2,6,0,1,2,1,1,2,2,1,1,3,2,1,1,1,2,6,0,2,2,6,1,2,2,7,0,8,2,104,0,5,2,11,0,1,2,3,1,1,2,11,0,3,2,1,1,1,2,11,0,2,2,1,1,3,2,9,0,2,2,4,1,1,2,9,0,1,2,1,1,5,2,9,0,1,2,1,1,1,2,13,0,1,2,1,1,5,2,9,0,2,2,4,1,1,2,10,0,6,2,154,0,5,2,10,0,2,2,3,1,1,2,10,0,1,2,1,1,5,2,9,0,1,2,5,1,1,2,9,0,1,2,1,1,3,2,1,1,1,2,9,0,2,2,3,1,2,2,10,0,5,2,12,0,2,2,1,1,1,2,11,0,2,2,1,1,2,2,11,0,1,2,1,1,2,2,12,0,3,2,93,0,5,2,10,0,2,2,3,1,1,2,10,0,1,2,1,1,5,2,9,0,1,2,5,1,1,2,9,0,1,2,1,1,3,2,1,1,1,2,9,0,2,2,3,1,2,2,10,0,5,2,11,0,1,2,1,1,2,2,12,0,2,2,1,1,2,2,12,0,2,2,1,1,1,2,13,0,3,2,91,0,5,2,10,0,2,2,3,1,1,2,10,0,1,2,1,1,5,2,9,0,1,2,5,1,1,2,9,0,1,2,1,1,3,2,1,1,1,2,9,0,2,2,3,1,2,2,10,0,5,2,11,0,1,2,1,1,1,2,1,1,1,2,11,0,2,2,1,1,2,2,12,0,3,2,108,0,5,2,10,0,2,2,3,1,1,2,10,0,1,2,1,1,5,2,9,0,1,2,5,1,1,2,9,0,1,2,1,1,3,2,1,1,1,2,9,0,2,2,3,1,2,2,10,0,5,2,11,0,1,2,1,1,1,2,1,1,1,2,11,0,5,2,123,0,3,2,13,0,1,2,1,1,1,2,13,0,1,2,1,1,1,2,13,0,1,2,1,1,1,2,13,0,1,2,1,1,1,2,13,0,1,2,1,1,1,2,13,0,4,2,12,0,2,2,1,1,1,2,11,0,2,2,1,1,2,2,11,0,1,2,1,1,2,2,12,0,3,2,94,0,3,2,13,0,1,2,1,1,1,2,13,0,1,2,1,1,1,2,13,0,1,2,1,1,1,2,13,0,1,2,1,1,1,2,13,0,1,2,1,1,1,2,12,0,4,2,12,0,1,2,1,1,2,2,12,0,2,2,1,1,2,2,12,0,2,2,1,1,1,2,13,0,3,2,92,0,3,2,13,0,1,2,1,1,1,2,13,0,1,2,1,1,1,2,13,0,1,2,1,1,1,2,13,0,1,2,1,1,1,2,13,0,1,2,1,1,1,2,12,0,5,2,11,0,1,2,1,1,1,2,1,1,1,2,11,0,2,2,1,1,2,2,12,0,3,2,109,0,3,2,13,0,1,2,1,1,1,2,13,0,1,2,1,1,1,2,13,0,1,2,1,1,1,2,13,0,1,2,1,1,1,2,13,0,1,2,1,1,1,2,12,0,5,2,11,0,1,2,1,1,1,2,1,1,1,2,11,0,5,2,124,0,5,2,10,0,2,2,3,1,2,2,9,0,1,2,1,1,3,2,1,1,1,2,9,0,1,2,1,1,1,2,1,0,1,2,1,1,1,2,9,0,1,2,1,1,3,2,1,1,1,2,9,0,2,2,4,1,1,2,10,0,3,2,1,1,2,2,9,0,2,2,2,1,2,2,10,0,1,2,2,1,1,2,1,1,1,2,10,0,6,2,106,0,3,2,1,0,3,2,9,0,1,2,1,1,1,2,1,0,1,2,1,1,1,2,9,0,1,2,1,1,1,2,1,0,1,2,1,1,1,2,9,0,1,2,1,1,1,2,1,0,1,2,1,1,1,2,9,0,1,2,1,1,3,2,1,1,1,2,9,0,2,2,3,1,2,2,10,0,5,2,11,0,1,2,1,1,1,2,1,1,2,2,10,0,2,2,1,1,1,2,1,1,1,2,11,0,5,2,106,0,5,2,10,0,2,2,3,1,2,2,9,0,1,2,1,1,3,2,1,1,1,2,9,0,1,2,1,1,1,2,1,0,1,2,1,1,1,2,9,0,1,2,1,1,3,2,1,1,1,2,9,0,2,2,3,1,2,2,10,0,5,2,12,0,2,2,1,1,1,2,11,0,2,2,1,1,2,2,11,0,1,2,1,1,2,2,12,0,3,2,93,0,5,2,10,0,2,2,3,1,2,2,9,0,1,2,1,1,3,2,1,1,1,2,9,0,1,2,1,1,1,2,1,0,1,2,1,1,1,2,9,0,1,2,1,1,3,2,1,1,1,2,9,0,2,2,3,1,2,2,10,0,5,2,11,0,1,2,1,1,2,2,12,0,2,2,1,1,2,2,12,0,2,2,1,1,1,2,13,0,3,2,91,0,5,2,10,0,2,2,3,1,2,2,9,0,1,2,1,1,3,2,1,1,1,2,9,0,1,2,1,1,1,2,1,0,1,2,1,1,1,2,9,0,1,2,1,1,3,2,1,1,1,2,9,0,2,2,3,1,2,2,10,0,5,2,11,0,1,2,1,1,1,2,1,1,1,2,11,0,2,2,1,1,2,2,12,0,3,2,108,0,5,2,10,0,2,2,3,1,2,2,9,0,1,2,1,1,3,2,1,1,1,2,9,0,1,2,1,1,1,2,1,0,1,2,1,1,1,2,9,0,1,2,1,1,3,2,1,1,1,2,9,0,2,2,3,1,2,2,10,0,5,2,11,0,1,2,1,1,1,2,1,1,2,2,10,0,2,2,1,1,1,2,1,1,1,2,11,0,5,2,106,0,5,2,10,0,2,2,3,1,2,2,9,0,1,2,1,1,3,2,1,1,1,2,9,0,1,2,1,1,1,2,1,0,1,2,1,1,1,2,9,0,1,2,1,1,3,2,1,1,1,2,9,0,2,2,3,1,2,2,10,0,5,2,11,0,1,2,1,1,1,2,1,1,1,2,11,0,5,2,124,0,3,2,13,0,1,2,1,1,1,2,11,0,7,2,9,0,1,2,5,1,1,2,9,0,7,2,11,0,1,2,1,1,1,2,13,0,3,2,138,0,3,2,13,0,1,2,1,1,5,2,9,0,2,2,4,1,2,2,9,0,1,2,2,1,2,2,1,1,1,2,9,0,1,2,1,1,1,2,1,1,1,2,1,1,1,2,9,0,1,2,1,1,2,2,2,1,1,2,9,0,2,2,4,1,2,2,9,0,5,2,1,1,1,2,13,0,3,2,137,0,5,2,10,0,2,2,3,1,2,2,9,0,1,2,1,1,3,2,1,1,1,2,9,0,1,2,1,1,1,2,1,0,1,2,1,1,1,2,9,0,1,2,1,1,1,2,1,0,1,2,1,1,1,2,9,0,1,2,1,1,1,2,1,0,1,2,1,1,1,2,9,0,7,2,11,0,2,2,1,1,1,2,11,0,2,2,1,1,2,2,11,0,1,2,1,1,2,2,12,0,3,2,93,0,5,2,10,0,2,2,3,1,2,2,9,0,1,2,1,1,3,2,1,1,1,2,9,0,1,2,1,1,1,2,1,0,1,2,1,1,1,2,9,0,1,2,1,1,1,2,1,0,1,2,1,1,1,2,9,0,1,2,1,1,1,2,1,0,1,2,1,1,1,2,9,0,7,2,10,0,1,2,1,1,2,2,12,0,2,2,1,1,2,2,12,0,2,2,1,1,1,2,13,0,3,2,91,0,5,2,10,0,2,2,3,1,2,2,9,0,1,2,1,1,3,2,1,1,1,2,9,0,1,2,1,1,1,2,1,0,1,2,1,1,1,2,9,0,1,2,1,1,1,2,1,0,1,2,1,1,1,2,9,0,1,2,1,1,1,2,1,0,1,2,1,1,1,2,9,0,7,2,10,0,1,2,1,1,1,2,1,1,1,2,11,0,2,2,1,1,2,2,12,0,3,2,108,0,5,2,10,0,2,2,3,1,2,2,9,0,1,2,1,1,3,2,1,1,1,2,9,0,1,2,1,1,1,2,1,0,1,2,1,1,1,2,9,0,1,2,1,1,1,2,1,0,1,2,1,1,1,2,9,0,1,2,1,1,1,2,1,0,1,2,1,1,1,2,9,0,7,2,10,0,1,2,1,1,1,2,1,1,1,2,11,0,5,2,91,0,5,2,11,0,1,2,3,1,2,2,10,0,4,2,1,1,1,2,9,0,2,2,4,1,1,2,9,0,1,2,1,1,3,2,1,1,1,2,9,0,1,2,1,1,1,2,1,0,1,2,1,1,1,2,9,0,1,2,1,1,1,2,1,0,1,2,1,1,1,2,9,0,1,2,1,1,1,2,1,0,1,2,1,1,1,2,9,0,7,2,10,0,1,2,1,1,2,2,12,0,2,2,1,1,2,2,12,0,2,2,1,1,1,2,13,0,3,2,58,0,3,2,13,0,1,2,1,1,1,2,13,0,1,2,1,1,4,2,10,0,1,2,4,1,2,2,9,0,1,2,1,1,3,2,1,1,1,2,9,0,1,2,1,1,1,2,1,0,1,2,1,1,1,2,9,0,1,2,1,1,3,2,1,1,1,2,9,0,1,2,4,1,2,2,9,0,1,2,1,1,4,2,10,0,1,2,1,1,1,2,13,0,3,2,94,0,5,2,11,0,1,2,3,1,2,2,10,0,4,2,1,1,1,2,9,0,2,2,4,1,1,2,9,0,1,2,1,1,3,2,1,1,1,2,9,0,1,2,1,1,1,2,1,0,1,2,1,1,1,2,9,0,1,2,1,1,1,2,1,0,1,2,1,1,1,2,9,0,1,2,1,1,1,2,1,0,1,2,1,1,1,2,9,0,7,2,10,0,1,2,1,1,1,2,1,1,1,2,11,0,5,2,73,0]};\n\n//# sourceURL=webpack://minnow/./src/FontData/standard.font.json?");

/***/ }),

/***/ "./src/Input/Input.js":
/*!****************************!*\
  !*** ./src/Input/Input.js ***!
  \****************************/
/*! exports provided: GAME_LEFT, GAME_RIGHT, GAME_UP, GAME_DOWN, GAME_ACTION_ONE, GAME_ACTION_TWO, GAME_ACTION_THREE, GAME_ACTION_FOUR, GAME_PAUSE, GAME_LEFT_TRIGGER, GAME_RIGHT_TRIGGER, MENU_LEFT, MENU_RIGHT, MENU_UP, MENU_DOWN, MENU_CONFIRM, MENU_BACK, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"GAME_LEFT\", function() { return GAME_LEFT; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"GAME_RIGHT\", function() { return GAME_RIGHT; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"GAME_UP\", function() { return GAME_UP; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"GAME_DOWN\", function() { return GAME_DOWN; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"GAME_ACTION_ONE\", function() { return GAME_ACTION_ONE; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"GAME_ACTION_TWO\", function() { return GAME_ACTION_TWO; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"GAME_ACTION_THREE\", function() { return GAME_ACTION_THREE; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"GAME_ACTION_FOUR\", function() { return GAME_ACTION_FOUR; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"GAME_PAUSE\", function() { return GAME_PAUSE; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"GAME_LEFT_TRIGGER\", function() { return GAME_LEFT_TRIGGER; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"GAME_RIGHT_TRIGGER\", function() { return GAME_RIGHT_TRIGGER; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MENU_LEFT\", function() { return MENU_LEFT; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MENU_RIGHT\", function() { return MENU_RIGHT; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MENU_UP\", function() { return MENU_UP; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MENU_DOWN\", function() { return MENU_DOWN; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MENU_CONFIRM\", function() { return MENU_CONFIRM; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MENU_BACK\", function() { return MENU_BACK; });\n/* harmony import */ var _Keys__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Keys */ \"./src/Input/Keys.js\");\n\n\nconst GAME_LEFT = 0;\nconst GAME_RIGHT = 1;\nconst GAME_UP = 2;\nconst GAME_DOWN = 3;\nconst GAME_ACTION_ONE = 4;\nconst GAME_ACTION_TWO = 5;\nconst GAME_ACTION_THREE = 6;\nconst GAME_ACTION_FOUR = 7;\nconst GAME_PAUSE = 8;\nconst GAME_LEFT_TRIGGER = 9;\nconst GAME_RIGHT_TRIGGER = 10;\n\nconst MENU_LEFT = 11;\nconst MENU_RIGHT = 12;\nconst MENU_UP = 13;\nconst MENU_DOWN = 14;\nconst MENU_CONFIRM = 15;\nconst MENU_BACK = 16;\n\n/**\n * Handle game input\n */\nclass Input {\n  constructor() {\n    this.canvas = null;\n    this.canvasScale = 1;\n    this.screenWidth = 1;\n    this.screenHeight = 1;\n\n    this.mouse = {};\n    this.mouse.isOffScreen = true;\n    this.mouse.position = {\n      x: -1,\n      y: -1,\n    };\n\n    this.mouse.left = {\n      pressed: false,\n      down: false,\n      up: false,\n    };\n\n    this.mouse.right = {\n      pressed: false,\n      down: false,\n      up: false,\n    };\n\n    this._keysRaw = new Uint8ClampedArray( 256 );\n    this._currentKeys = new Uint8ClampedArray( 256 );\n    this._lastKeys = new Uint8ClampedArray( 256 );\n\n    this._buttonsToKeys = new Uint8ClampedArray( 32 );\n\n    // default button mappings\n    this._buttonsToKeys[GAME_LEFT] = _Keys__WEBPACK_IMPORTED_MODULE_0__[\"LEFT_ARROW\"];\n    this._buttonsToKeys[GAME_RIGHT] = _Keys__WEBPACK_IMPORTED_MODULE_0__[\"RIGHT_ARROW\"];\n    this._buttonsToKeys[GAME_UP] = _Keys__WEBPACK_IMPORTED_MODULE_0__[\"UP_ARROW\"];\n    this._buttonsToKeys[GAME_DOWN] = _Keys__WEBPACK_IMPORTED_MODULE_0__[\"DOWN_ARROW\"];\n\n    this._buttonsToKeys[GAME_ACTION_ONE] = _Keys__WEBPACK_IMPORTED_MODULE_0__[\"Z_KEY\"];\n    this._buttonsToKeys[GAME_ACTION_TWO] = _Keys__WEBPACK_IMPORTED_MODULE_0__[\"X_KEY\"];\n    this._buttonsToKeys[GAME_ACTION_THREE] = _Keys__WEBPACK_IMPORTED_MODULE_0__[\"A_KEY\"];\n    this._buttonsToKeys[GAME_ACTION_FOUR] = _Keys__WEBPACK_IMPORTED_MODULE_0__[\"S_KEY\"];\n    this._buttonsToKeys[GAME_LEFT_TRIGGER] = _Keys__WEBPACK_IMPORTED_MODULE_0__[\"Q_KEY\"];\n    this._buttonsToKeys[GAME_RIGHT_TRIGGER] = _Keys__WEBPACK_IMPORTED_MODULE_0__[\"W_KEY\"];\n\n    this._buttonsToKeys[GAME_PAUSE] = _Keys__WEBPACK_IMPORTED_MODULE_0__[\"P_KEY\"];\n\n    this._buttonsToKeys[MENU_LEFT] = _Keys__WEBPACK_IMPORTED_MODULE_0__[\"LEFT_ARROW\"];\n    this._buttonsToKeys[MENU_RIGHT] = _Keys__WEBPACK_IMPORTED_MODULE_0__[\"RIGHT_ARROW\"];\n    this._buttonsToKeys[MENU_UP] = _Keys__WEBPACK_IMPORTED_MODULE_0__[\"UP_ARROW\"];\n    this._buttonsToKeys[MENU_DOWN] = _Keys__WEBPACK_IMPORTED_MODULE_0__[\"DOWN_ARROW\"];\n\n    this._buttonsToKeys[MENU_CONFIRM] = _Keys__WEBPACK_IMPORTED_MODULE_0__[\"X_KEY\"];\n    this._buttonsToKeys[MENU_BACK] = _Keys__WEBPACK_IMPORTED_MODULE_0__[\"Z_KEY\"];\n\n    this._currentButtons = new Uint8ClampedArray( 32 );\n    this._lastButtons = new Uint8ClampedArray( 32 );\n\n    this._currentMouseLeft = false;\n    this._lastMouseLeft = false;\n    this._forceMouseLeftDown = false;\n\n    this._currentMouseRight = false;\n    this._lastMouseRight = false;\n    this._forceMouseRightDown = false;\n  }\n\n  /**\n   * Do initial setup. Add event listeners.\n   */\n  init() {\n    window.addEventListener( 'keydown', this._keyDown.bind( this ), false );\n    window.addEventListener( 'keyup', this._keyUp.bind( this ), false );\n\n    if ( this.canvas ) {\n      this.canvas.oncontextmenu = ( e ) => {\n        e.preventDefault();\n      };\n\n      this.canvas.addEventListener( 'mouseenter', this._mouseEnter.bind( this ), false );\n      this.canvas.addEventListener( 'mousemove', this._mouseMove.bind( this ), false );\n      this.canvas.addEventListener( 'mousedown', this._mouseDown.bind( this ), false );\n      this.canvas.addEventListener( 'mouseup', this._mouseUp.bind( this ), false );\n      this.canvas.addEventListener( 'mouseleave', this._mouseLeave.bind( this ), false );\n    }\n  }\n\n  _keyDown( e ) {\n    if ( e.code ) {\n      this._keysRaw[_Keys__WEBPACK_IMPORTED_MODULE_0__[\"codesToKeyCodes\"][e.code]] = 1;\n    }\n    else {\n      this._keysRaw[e.keyCode] = 1;\n    }\n  }\n\n  _keyUp( e ) {\n    if ( e.code ) {\n      this._keysRaw[_Keys__WEBPACK_IMPORTED_MODULE_0__[\"codesToKeyCodes\"][e.code]] = 0;\n    }\n    else {\n      this._keysRaw[e.keyCode] = 0;\n    }\n  }\n\n  _mouseEnter() {\n    this.mouse.isOffScreen = false;\n    this._currentMouseLeft = false;\n    this._currentMouseRight = false;\n  }\n\n  _mouseMove( e ) {\n    const canvasRect = this.canvas.getBoundingClientRect();\n    this.mouse.position = {\n      x: Math.floor( ( e.clientX - canvasRect.left ) / this.canvasScale ),\n      y: this.screenHeight - Math.floor( ( e.clientY - canvasRect.top ) / this.canvasScale ) - 1,\n    };\n  }\n\n  _mouseDown( e ) {\n    if ( e.button === 0 ) {\n      // left button\n      this._currentMouseLeft = true;\n      this._forceMouseLeftDown = true;\n    }\n    else if ( e.button === 2 ) {\n      // right button\n      this._currentMouseRight = true;\n      this._forceMouseRightDown = true;\n    }\n  }\n\n  _mouseUp( e ) {\n    if ( e.button === 0 ) {\n      // left button\n      this._currentMouseLeft = false;\n    }\n    else if ( e.button === 2 ) {\n      // right button\n      this._currentMouseRight = false;\n    }\n  }\n\n  _mouseLeave() {\n    this.mouse.isOffScreen = true;\n  }\n\n  /**\n   * Update the input, should be done first thing in the game loop.\n   */\n  pollInput() {\n    for ( let i = 0; i < 256; i += 1 ) {\n      this._lastKeys[i] = this._currentKeys[i];\n      this._currentKeys[i] = this._keysRaw[i];\n    }\n\n    this._updateButtons();\n\n    this.mouse.left.pressed = this._forceMouseLeftDown ? true : this._currentMouseLeft;\n    this.mouse.left.down = this._forceMouseLeftDown ? true : this._currentMouseLeft && !this._lastMouseLeft;\n    this.mouse.left.up = !this._currentMouseLeft && this._lastMouseLeft;\n\n    this.mouse.right.pressed = this._forceMouseRightDown ? true : this._currentMouseRight;\n    this.mouse.right.down = this._forceMouseRightDown ? true : this._currentMouseRight && !this._lastMouseRight;\n    this.mouse.right.up = !this._currentMouseRight && this._lastMouseRight;\n\n    this._forceMouseLeftDown = false;\n    this._forceMouseRightDown = false;\n\n    this._lastMouseLeft = this._currentMouseLeft;\n    this._lastMouseRight = this._currentMouseRight;\n  }\n\n  /**\n   * return true if the key is currently held down\n   * @param {number} keyCode\n   */\n  getKeyPressed( keyCode ) {\n    if ( keyCode < 0 || keyCode >= 256 ) {\n      return false;\n    }\n\n    return this._currentKeys[keyCode] > 0;\n  }\n\n  /**\n   * return true if the key was pressed down this frame\n   * @param {number} keyCode\n   */\n  getKeyDown( keyCode ) {\n    if ( keyCode < 0 || keyCode >= 256 ) {\n      return false;\n    }\n\n    const current = this._currentKeys[keyCode] > 0;\n    const last = this._lastKeys[keyCode] > 0;\n    return current && !last;\n  }\n\n  /**\n   * return true if the key was released this frame\n   * @param {number} keyCode\n   */\n  getKeyUp( keyCode ) {\n    if ( keyCode < 0 || keyCode >= 256 ) {\n      return false;\n    }\n\n    const current = this._currentKeys[keyCode] > 0;\n    const last = this._lastKeys[keyCode] > 0;\n    return !current && last;\n  }\n\n  /**\n   * return true if the button is currently held down\n   * @param {number} buttonCode\n   */\n  getButtonPressed( buttonCode ) {\n    return this.getKeyPressed( this._buttonsToKeys[buttonCode] );\n  }\n\n  /**\n   * return true if the button was pressed down this frame\n   * @param {number} buttonCode\n   */\n  getButtonDown( buttonCode ) {\n    return this.getKeyDown( this._buttonsToKeys[buttonCode] );\n  }\n\n  /**\n   * return true if the button was released this frame\n   * @param {number} buttonCode\n   */\n  getButtonUp( buttonCode ) {\n    return this.getKeyUp( this._buttonsToKeys[buttonCode] );\n  }\n\n  _updateButtons() {\n    this._updateButton( 'left', GAME_LEFT );\n    this._updateButton( 'right', GAME_RIGHT );\n    this._updateButton( 'up', GAME_UP );\n    this._updateButton( 'down', GAME_DOWN );\n\n    this._updateButton( 'action1', GAME_ACTION_ONE );\n    this._updateButton( 'action2', GAME_ACTION_TWO );\n    this._updateButton( 'action3', GAME_ACTION_THREE );\n    this._updateButton( 'action4', GAME_ACTION_FOUR );\n    this._updateButton( 'leftTrigger', GAME_LEFT_TRIGGER );\n    this._updateButton( 'rightTrigger', GAME_RIGHT_TRIGGER );\n\n    this._updateButton( 'pause', GAME_PAUSE );\n\n    this._updateButton( 'menuLeft', MENU_LEFT );\n    this._updateButton( 'menuRight', MENU_RIGHT );\n    this._updateButton( 'menuUp', MENU_UP );\n    this._updateButton( 'menuDown', MENU_DOWN );\n\n    this._updateButton( 'menuConfirm', MENU_CONFIRM );\n    this._updateButton( 'menuBack', MENU_BACK );\n  }\n\n  _updateButton( name, index ) {\n    const key = this._buttonsToKeys[index];\n    const pressed = this.getKeyPressed( key );\n    const down = this.getKeyDown( key );\n    const up = this.getKeyUp( key );\n\n    this[name] = { pressed, down, up };\n  }\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Input);\n\n\n//# sourceURL=webpack://minnow/./src/Input/Input.js?");

/***/ }),

/***/ "./src/Input/Keys.js":
/*!***************************!*\
  !*** ./src/Input/Keys.js ***!
  \***************************/
/*! exports provided: BACKSPACE, TAB, ENTER, SHIFT, CTRL, ALT, PAUSE_BREAK, CAPSLOCK, ESCAPE, SPACE, PAGE_UP, PAGE_DOWN, END, HOME, LEFT_ARROW, UP_ARROW, RIGHT_ARROW, DOWN_ARROW, INSERT, DELETE, ZERO, ONE, TWO, THREE, FOUR, FIVE, SIX, SEVEN, EIGHT, NINE, A_KEY, B_KEY, C_KEY, D_KEY, E_KEY, F_KEY, G_KEY, H_KEY, I_KEY, J_KEY, K_KEY, L_KEY, M_KEY, N_KEY, O_KEY, P_KEY, Q_KEY, R_KEY, S_KEY, T_KEY, U_KEY, V_KEY, W_KEY, X_KEY, Y_KEY, Z_KEY, LEFT_WINDOW, RIGHT_WINDOW, SELECT, NUM_ZERO, NUM_ONE, NUM_TWO, NUM_THREE, NUM_FOUR, NUM_FIVE, NUM_SIX, NUM_SEVEN, NUM_EIGHT, NUM_NINE, MULTIPLY, ADD, SUBTRACT, DECIMAL_POINT, DIVIDE, F1, F2, F3, F4, F5, F6, F7, F8, F9, F10, F11, F12, NUM_LOCK, SCROLL_LOCK, SEMI_COLON, EQUAL_SIGN, COMMA, DASH, PERIOD, FORWARD_SLASH, GRAVE_ACCENT, OPEN_BRACKET, BACK_SLASH, CLOSE_BRACKET, SINGLE_QUOTE, codesToKeyCodes */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"BACKSPACE\", function() { return BACKSPACE; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"TAB\", function() { return TAB; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ENTER\", function() { return ENTER; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SHIFT\", function() { return SHIFT; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CTRL\", function() { return CTRL; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ALT\", function() { return ALT; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"PAUSE_BREAK\", function() { return PAUSE_BREAK; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CAPSLOCK\", function() { return CAPSLOCK; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ESCAPE\", function() { return ESCAPE; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SPACE\", function() { return SPACE; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"PAGE_UP\", function() { return PAGE_UP; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"PAGE_DOWN\", function() { return PAGE_DOWN; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"END\", function() { return END; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"HOME\", function() { return HOME; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"LEFT_ARROW\", function() { return LEFT_ARROW; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"UP_ARROW\", function() { return UP_ARROW; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"RIGHT_ARROW\", function() { return RIGHT_ARROW; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"DOWN_ARROW\", function() { return DOWN_ARROW; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"INSERT\", function() { return INSERT; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"DELETE\", function() { return DELETE; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ZERO\", function() { return ZERO; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ONE\", function() { return ONE; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"TWO\", function() { return TWO; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"THREE\", function() { return THREE; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"FOUR\", function() { return FOUR; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"FIVE\", function() { return FIVE; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SIX\", function() { return SIX; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SEVEN\", function() { return SEVEN; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"EIGHT\", function() { return EIGHT; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"NINE\", function() { return NINE; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"A_KEY\", function() { return A_KEY; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"B_KEY\", function() { return B_KEY; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"C_KEY\", function() { return C_KEY; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"D_KEY\", function() { return D_KEY; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"E_KEY\", function() { return E_KEY; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"F_KEY\", function() { return F_KEY; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"G_KEY\", function() { return G_KEY; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"H_KEY\", function() { return H_KEY; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"I_KEY\", function() { return I_KEY; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"J_KEY\", function() { return J_KEY; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"K_KEY\", function() { return K_KEY; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"L_KEY\", function() { return L_KEY; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"M_KEY\", function() { return M_KEY; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"N_KEY\", function() { return N_KEY; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"O_KEY\", function() { return O_KEY; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"P_KEY\", function() { return P_KEY; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Q_KEY\", function() { return Q_KEY; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"R_KEY\", function() { return R_KEY; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"S_KEY\", function() { return S_KEY; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"T_KEY\", function() { return T_KEY; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"U_KEY\", function() { return U_KEY; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"V_KEY\", function() { return V_KEY; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"W_KEY\", function() { return W_KEY; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"X_KEY\", function() { return X_KEY; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Y_KEY\", function() { return Y_KEY; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Z_KEY\", function() { return Z_KEY; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"LEFT_WINDOW\", function() { return LEFT_WINDOW; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"RIGHT_WINDOW\", function() { return RIGHT_WINDOW; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SELECT\", function() { return SELECT; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"NUM_ZERO\", function() { return NUM_ZERO; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"NUM_ONE\", function() { return NUM_ONE; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"NUM_TWO\", function() { return NUM_TWO; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"NUM_THREE\", function() { return NUM_THREE; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"NUM_FOUR\", function() { return NUM_FOUR; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"NUM_FIVE\", function() { return NUM_FIVE; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"NUM_SIX\", function() { return NUM_SIX; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"NUM_SEVEN\", function() { return NUM_SEVEN; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"NUM_EIGHT\", function() { return NUM_EIGHT; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"NUM_NINE\", function() { return NUM_NINE; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MULTIPLY\", function() { return MULTIPLY; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ADD\", function() { return ADD; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SUBTRACT\", function() { return SUBTRACT; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"DECIMAL_POINT\", function() { return DECIMAL_POINT; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"DIVIDE\", function() { return DIVIDE; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"F1\", function() { return F1; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"F2\", function() { return F2; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"F3\", function() { return F3; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"F4\", function() { return F4; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"F5\", function() { return F5; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"F6\", function() { return F6; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"F7\", function() { return F7; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"F8\", function() { return F8; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"F9\", function() { return F9; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"F10\", function() { return F10; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"F11\", function() { return F11; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"F12\", function() { return F12; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"NUM_LOCK\", function() { return NUM_LOCK; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SCROLL_LOCK\", function() { return SCROLL_LOCK; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SEMI_COLON\", function() { return SEMI_COLON; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"EQUAL_SIGN\", function() { return EQUAL_SIGN; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"COMMA\", function() { return COMMA; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"DASH\", function() { return DASH; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"PERIOD\", function() { return PERIOD; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"FORWARD_SLASH\", function() { return FORWARD_SLASH; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"GRAVE_ACCENT\", function() { return GRAVE_ACCENT; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"OPEN_BRACKET\", function() { return OPEN_BRACKET; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"BACK_SLASH\", function() { return BACK_SLASH; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CLOSE_BRACKET\", function() { return CLOSE_BRACKET; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SINGLE_QUOTE\", function() { return SINGLE_QUOTE; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"codesToKeyCodes\", function() { return codesToKeyCodes; });\n\nconst BACKSPACE = 8;\nconst TAB = 9;\nconst ENTER = 13;\nconst SHIFT = 16;\nconst CTRL = 17;\nconst ALT = 18;\nconst PAUSE_BREAK = 19;\nconst CAPSLOCK = 20;\nconst ESCAPE = 27;\nconst SPACE = 32;\nconst PAGE_UP = 33;\nconst PAGE_DOWN = 34;\nconst END = 35;\nconst HOME = 36;\nconst LEFT_ARROW = 37;\nconst UP_ARROW = 38;\nconst RIGHT_ARROW = 39;\nconst DOWN_ARROW = 40;\nconst INSERT = 45;\nconst DELETE = 46;\nconst ZERO = 48;\nconst ONE = 49;\nconst TWO = 50;\nconst THREE = 51;\nconst FOUR = 52;\nconst FIVE = 53;\nconst SIX = 54;\nconst SEVEN = 55;\nconst EIGHT = 56;\nconst NINE = 57;\nconst A_KEY = 65;\nconst B_KEY = 66;\nconst C_KEY = 67;\nconst D_KEY = 68;\nconst E_KEY = 69;\nconst F_KEY = 70;\nconst G_KEY = 71;\nconst H_KEY = 72;\nconst I_KEY = 73;\nconst J_KEY = 74;\nconst K_KEY = 75;\nconst L_KEY = 76;\nconst M_KEY = 77;\nconst N_KEY = 78;\nconst O_KEY = 79;\nconst P_KEY = 80;\nconst Q_KEY = 81;\nconst R_KEY = 82;\nconst S_KEY = 83;\nconst T_KEY = 84;\nconst U_KEY = 85;\nconst V_KEY = 86;\nconst W_KEY = 87;\nconst X_KEY = 88;\nconst Y_KEY = 89;\nconst Z_KEY = 90;\nconst LEFT_WINDOW = 91;\nconst RIGHT_WINDOW = 92;\nconst SELECT = 93;\nconst NUM_ZERO = 96;\nconst NUM_ONE = 97;\nconst NUM_TWO = 98;\nconst NUM_THREE = 99;\nconst NUM_FOUR = 100;\nconst NUM_FIVE = 101;\nconst NUM_SIX = 102;\nconst NUM_SEVEN = 103;\nconst NUM_EIGHT = 104;\nconst NUM_NINE = 105;\nconst MULTIPLY = 106;\nconst ADD = 107;\nconst SUBTRACT = 109;\nconst DECIMAL_POINT = 110;\nconst DIVIDE = 111;\nconst F1 = 112;\nconst F2 = 113;\nconst F3 = 114;\nconst F4 = 115;\nconst F5 = 116;\nconst F6 = 117;\nconst F7 = 118;\nconst F8 = 119;\nconst F9 = 120;\nconst F10 = 121;\nconst F11 = 122;\nconst F12 = 123;\nconst NUM_LOCK = 144;\nconst SCROLL_LOCK = 145;\nconst SEMI_COLON = 186;\nconst EQUAL_SIGN = 187;\nconst COMMA = 188;\nconst DASH = 189;\nconst PERIOD = 190;\nconst FORWARD_SLASH = 191;\nconst GRAVE_ACCENT = 192;\nconst OPEN_BRACKET = 219;\nconst BACK_SLASH = 220;\nconst CLOSE_BRACKET = 221;\nconst SINGLE_QUOTE = 222;\n\nconst codesToKeyCodes = {\n  Backspace: BACKSPACE,\n  Tab: TAB,\n  Enter: ENTER,\n  ShiftLeft: SHIFT,\n  ShiftRight: SHIFT,\n  ControlLeft: CTRL,\n  ControlRight: CTRL,\n  AltLeft: ALT,\n  AltRight: ALT,\n  CapsLock: CAPSLOCK,\n  Escape: ESCAPE,\n  Space: SPACE,\n  PageUp: PAGE_UP,\n  PageDown: PAGE_DOWN,\n  End: END,\n  Home: HOME,\n  ArrowLeft: LEFT_ARROW,\n  ArrowUp: UP_ARROW,\n  ArrowRight: RIGHT_ARROW,\n  ArrowDown: DOWN_ARROW,\n  Insert: INSERT,\n  Delete: DELETE,\n  Digit0: ZERO,\n  Digit1: ONE,\n  Digit2: TWO,\n  Digit3: THREE,\n  Digit4: FOUR,\n  Digit5: FIVE,\n  Digit6: SIX,\n  Digit7: SEVEN,\n  Digit8: EIGHT,\n  Digit9: NINE,\n  KeyA: A_KEY,\n  KeyB: B_KEY,\n  KeyC: C_KEY,\n  KeyD: D_KEY,\n  KeyE: E_KEY,\n  KeyF: F_KEY,\n  KeyG: G_KEY,\n  KeyH: H_KEY,\n  KeyI: I_KEY,\n  KeyJ: J_KEY,\n  KeyK: K_KEY,\n  KeyL: L_KEY,\n  KeyM: M_KEY,\n  KeyN: N_KEY,\n  KeyO: O_KEY,\n  KeyP: P_KEY,\n  KeyQ: Q_KEY,\n  KeyR: R_KEY,\n  KeyS: S_KEY,\n  KeyT: T_KEY,\n  KeyU: U_KEY,\n  KeyV: V_KEY,\n  KeyW: W_KEY,\n  KeyX: X_KEY,\n  KeyY: Y_KEY,\n  KeyZ: Z_KEY,\n  Select: SELECT,\n  Numpad0: NUM_ZERO,\n  Numpad1: NUM_ONE,\n  Numpad2: NUM_TWO,\n  Numpad3: NUM_THREE,\n  Numpad4: NUM_FOUR,\n  Numpad5: NUM_FIVE,\n  Numpad6: NUM_SIX,\n  Numpad7: NUM_SEVEN,\n  Numpad8: NUM_EIGHT,\n  Numpad9: NUM_NINE,\n  NumpadMultiply: MULTIPLY,\n  NumpadAdd: ADD,\n  NumpadSubtract: SUBTRACT,\n  NumpadDecimal: DECIMAL_POINT,\n  NumpadDivide: DIVIDE,\n  F1,\n  F2,\n  F3,\n  F4,\n  F5,\n  F6,\n  F7,\n  F8,\n  F9,\n  F10,\n  F11,\n  F12,\n  NumLock: NUM_LOCK,\n  ScrollLock: SCROLL_LOCK,\n  Semicolon: SEMI_COLON,\n  Equal: EQUAL_SIGN,\n  NumpadEqual: EQUAL_SIGN,\n  Comma: COMMA,\n  NumpadComma: COMMA,\n  Period: PERIOD,\n  Slash: FORWARD_SLASH,\n  Backquote: GRAVE_ACCENT,\n  BracketLeft: OPEN_BRACKET,\n  Backslash: BACK_SLASH,\n  BracketRight: CLOSE_BRACKET,\n  Quote: SINGLE_QUOTE,\n  Minus: DASH,\n  NumpadEnter: ENTER,\n};\n\n\n//# sourceURL=webpack://minnow/./src/Input/Keys.js?");

/***/ }),

/***/ "./src/MapData/MapData.js":
/*!********************************!*\
  !*** ./src/MapData/MapData.js ***!
  \********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _TileMap__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./TileMap */ \"./src/MapData/TileMap.js\");\n\n\n/**\n * Holds all of the Tile Map data.\n */\nclass MapData {\n  constructor() {\n    this.tileMaps = [];\n  }\n\n  /**\n   * Add a tilemap from a data object\n   * @param {Object} tileMap - The tile map data\n   */\n  addTileMap( tileMap ) {\n    this.tileMaps.push( new _TileMap__WEBPACK_IMPORTED_MODULE_0__[\"default\"]( tileMap ) );\n    return this.tileMaps.length - 1;\n  }\n\n  /**\n   * Get the tile GID at a given position\n   * @param {number} x - The x position\n   * @param {number} y - The y position\n   * @param {number} tileMap - The index of the tile map you are checking\n   * @param {number} layer - The index of the layer on the tile map you are checking\n   */\n  getTile( x, y, tileMap = 0, layer = 0 ) {\n    return this.tileMaps[tileMap].getTile( x, y, layer );\n  }\n\n  /**\n   * Set the tile GID at a given position\n   * @param {*} gid - The gid\n   * @param {*} x - The x position\n   * @param {*} y - The y position\n   * @param {*} tileMap - The index of the tile map you are setting\n   * @param {*} layer - The index of the layer on the tile map you are setting\n   */\n  setTile( gid, x, y, tileMap = 0, layer = 0 ) {\n    this.tileMaps[tileMap].setTile( gid, x, y, layer );\n  }\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (MapData);\n\n\n//# sourceURL=webpack://minnow/./src/MapData/MapData.js?");

/***/ }),

/***/ "./src/MapData/TileMap.js":
/*!********************************!*\
  !*** ./src/MapData/TileMap.js ***!
  \********************************/
/*! exports provided: MAIN_LAYER, BG1_LAYER, BG2_LAYER, BG3_LAYER, FG1_LAYER, FG2_LAYER, FG3_LAYER, COLLISION_LAYER, META_LAYER, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MAIN_LAYER\", function() { return MAIN_LAYER; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"BG1_LAYER\", function() { return BG1_LAYER; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"BG2_LAYER\", function() { return BG2_LAYER; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"BG3_LAYER\", function() { return BG3_LAYER; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"FG1_LAYER\", function() { return FG1_LAYER; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"FG2_LAYER\", function() { return FG2_LAYER; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"FG3_LAYER\", function() { return FG3_LAYER; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"COLLISION_LAYER\", function() { return COLLISION_LAYER; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"META_LAYER\", function() { return META_LAYER; });\n\nconst MAIN_LAYER = 0;\nconst BG1_LAYER = 1;\nconst BG2_LAYER = 2;\nconst BG3_LAYER = 3;\nconst FG1_LAYER = 4;\nconst FG2_LAYER = 5;\nconst FG3_LAYER = 6;\nconst COLLISION_LAYER = 7;\nconst META_LAYER = 8;\n\n/**\n * Represents a Tile Map.\n */\nclass TileMap {\n  constructor( data ) {\n    this.name = '';\n    this.width = 0;\n    this.height = 0;\n    this.layers = new Array( 9 );\n\n    if ( data ) {\n      this.name = data.name;\n      this.width = data.width;\n      this.height = data.height;\n\n      if ( data.main ) {\n        this.layers[MAIN_LAYER] = this._getTypedArrayFromDataLayer( data.main );\n      }\n      if ( data.bg1 ) {\n        this.layers[BG1_LAYER] = this._getTypedArrayFromDataLayer( data.bg1 );\n      }\n      if ( data.bg2 ) {\n        this.layers[BG2_LAYER] = this._getTypedArrayFromDataLayer( data.bg2 );\n      }\n      if ( data.bg3 ) {\n        this.layers[BG3_LAYER] = this._getTypedArrayFromDataLayer( data.bg3 );\n      }\n      if ( data.fg1 ) {\n        this.layers[FG1_LAYER] = this._getTypedArrayFromDataLayer( data.fg1 );\n      }\n      if ( data.fg2 ) {\n        this.layers[FG2_LAYER] = this._getTypedArrayFromDataLayer( data.fg2 );\n      }\n      if ( data.fg3 ) {\n        this.layers[FG3_LAYER] = this._getTypedArrayFromDataLayer( data.fg3 );\n      }\n      if ( data.col ) {\n        this.layers[COLLISION_LAYER] = this._getTypedArrayFromDataLayer( data.col );\n      }\n      if ( data.meta ) {\n        this.layers[META_LAYER] = this._getTypedArrayFromDataLayer( data.meta );\n      }\n    }\n  }\n\n  /**\n   * Convert an array of numbers into a Uint16Array\n   * @param {number[]} dataLayer\n   */\n  _getTypedArrayFromDataLayer( dataLayer ) {\n    const result = new Uint16Array( this.width * this.height );\n    for ( let i = 0; i < dataLayer.length; i += 1 ) {\n      result[i] = dataLayer[i];\n    }\n    return result;\n  }\n\n  /**\n   * Get the tile GID at a given position\n   * @param {number} x - The x position\n   * @param {number} y - The y position\n   * @param {number} layer - The index of the layer on the tile map you are checking\n   */\n  getTile( x, y, layer = 0 ) {\n    const currentLayer = this.layers[layer];\n    const index = y * this.width + x;\n    return currentLayer[index];\n  }\n\n  /**\n   * Set the tile GID at a given position\n   * @param {*} gid - The gid\n   * @param {*} x - The x position\n   * @param {*} y - The y position\n   * @param {*} layer - The index of the layer on the tile map you are setting\n   */\n  setTile( gid, x, y, layer = 0 ) {\n    const currentLayer = this.layers[layer];\n    const index = y * this.width + x;\n    currentLayer[index] = gid;\n  }\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (TileMap);\n\n\n//# sourceURL=webpack://minnow/./src/MapData/TileMap.js?");

/***/ }),

/***/ "./src/Screen/Screen.js":
/*!******************************!*\
  !*** ./src/Screen/Screen.js ***!
  \******************************/
/*! exports provided: SCALE_CONSTANT, SCALE_FIT_WINDOW, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SCALE_CONSTANT\", function() { return SCALE_CONSTANT; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SCALE_FIT_WINDOW\", function() { return SCALE_FIT_WINDOW; });\n\nconst SCALE_CONSTANT = 1;\nconst SCALE_FIT_WINDOW = 2;\n\n/**\n * Represents a game screen for low resolution games.\n * Has simple drawing functions using an indexed palette of a maximum of 256 colors\n * The origin (0, 0) position of the screen is on the bottom left\n */\nclass Screen {\n  constructor() {\n    this.conainerId = 'minnow-container';\n    this.container = null;\n    this.width = 320;\n    this.height = 180;\n    this.scale = 3;\n    this.maxScale = -1;\n    this.minScale = 1;\n    this.scaleMode = SCALE_CONSTANT;\n    this.horizontalScaleCushion = 0;\n    this.verticalScaleCushion = 0;\n    this.rescaleOnWindowResize = true;\n    this.hideCursor = false;\n    this.tileData = null;\n    this.mapData = null;\n    this.fontData = null;\n\n    this.onScaleChange = null;\n\n    this.canvas = null;\n    this._context = null;\n    this._imageData = null;\n    this._screenData = null;\n    this._palette = null;\n    this._generatedPalette = null;\n\n    this._isLittleEndian = true;\n  }\n\n  /**\n   * Do initial setup such as creating the canvas and building the palette\n   */\n  init() {\n    this.container = document.getElementById( this.conainerId );\n\n    this.canvas = document.createElement( 'canvas' );\n    this.canvas.setAttribute( 'id', 'game-device' );\n    this.canvas.setAttribute( 'width', this.width );\n    this.canvas.setAttribute( 'height', this.height );\n\n    this._setScale();\n\n    if ( this.rescaleOnWindowResize && this.scaleMode !== SCALE_CONSTANT ) {\n      window.onresize = () => {\n        this._setScale();\n        this._setCanvasStyle();\n      };\n    }\n\n    this._setCanvasStyle();\n\n    this.container.appendChild( this.canvas );\n\n    this._context = this.canvas.getContext( '2d', { alpha: false } );\n    this._context.imageSmoothingEnabled = false;\n    this._screenData = new Uint8ClampedArray( this.width * this.height );\n    this._imageData = this._context.getImageData( 0, 0, this.width, this.height );\n\n    // check if we are little endian\n    const buffer = new ArrayBuffer( 4 );\n    const test8 = new Uint8ClampedArray( buffer );\n    const test32 = new Uint32Array( buffer );\n    test32[0] = 0x0a0b0c0d;\n\n    if ( test8[0] === 0x0a\n      && test8[1] === 0x0b\n      && test8[2] === 0x0c\n      && test8[3] === 0x0d\n    ) {\n      this._isLittleEndian = false;\n    }\n\n    if ( !this._palette ) {\n      // set the default palette\n      this._palette = [\n        [0x00, 0x00, 0x00],\n        [0x00, 0x00, 0x00],\n        [0xff, 0xff, 0xff],\n        [0xff, 0x00, 0x00],\n        [0x00, 0xff, 0x00],\n        [0x00, 0x00, 0xff],\n      ];\n    }\n\n    this._buildPalette();\n  }\n\n  _setScale() {\n    if ( this.scaleMode === SCALE_FIT_WINDOW ) {\n      const maxWidth = window.innerWidth - this.horizontalScaleCushion;\n      const maxHeight = window.innerHeight - this.verticalScaleCushion;\n\n      const maxHorizScale = Math.floor( maxWidth / this.width );\n      const maxVerticalScale = Math.floor( maxHeight / this.height );\n\n      this.scale = maxHorizScale < maxVerticalScale ? maxHorizScale : maxVerticalScale;\n      if ( this.scale < this.minScale ) {\n        this.scale = this.minScale;\n      }\n      if ( this.maxScale > 0 && this.scale > this.maxScale ) {\n        this.scale = this.maxScale;\n      }\n    }\n\n    if ( this.onScaleChange ) {\n      this.onScaleChange( this.scale );\n    }\n  }\n\n  _setCanvasStyle() {\n    let containerStyle = '';\n    containerStyle += `width: ${ this.width * this.scale }px;`;\n    containerStyle += `height: ${ this.height * this.scale }px;`;\n\n    this.container.setAttribute( 'style', containerStyle );\n\n    let canvasStyle = '';\n    canvasStyle += 'transform-origin: 50% 0%;';\n    canvasStyle += `transform: scale(${ this.scale });`;\n    canvasStyle += 'image-rendering: -webkit-optimize-contrast;';\n    canvasStyle += 'image-rendering: -moz-crisp-edges;';\n    canvasStyle += 'image-rendering: crisp-edges;';\n    canvasStyle += 'image-rendering: pixelated;';\n\n\n    if ( this.hideCursor ) {\n      canvasStyle += 'cursor: none';\n    }\n\n    this.canvas.setAttribute( 'style', canvasStyle );\n  }\n\n  /**\n   * Set the palette that will used by the Screen.\n   * All colors are drawn fully opaque exept for the palette index at 0 which is transparent\n   *\n   * @example\n   * const palette = [\n   *  [0, 0, 0], // black, the 0 index is transparent\n   *  [0, 0, 0], // black\n   *  [255, 255, 255], // white\n   *  [255, 0, 0], // red\n   *  [0, 255, 0], // green\n   *  [0, 0, 255] // blue\n   * ];\n   *\n   * screen.setPalette( palette );\n   *\n   * @param {Array.<Array.<number>} palette - The array of colors to be used by the screen.\n   * Each index should be a color described by an array of 3 integers in rgb order.\n   * Each integer has a min value of 0 and a max value of 255.\n   */\n  setPalette( palette ) {\n    this._palette = palette;\n    this._buildPalette();\n  }\n\n  /**\n   * Change a single palette color\n   *\n   * @param {number[]} color - The color we want to add\n   * @param {number} index - this palette index we want to set\n   */\n  setPaletteColorAtIndex( color, index ) {\n    this._palette[index] = color;\n    this._buildPalette();\n  }\n\n  /**\n   * Build the palette by converting _palette to the _generatedPalette we will be using internally\n   */\n  _buildPalette() {\n    this._generatedPalette = new Uint32Array( this._palette.length );\n    let currentColor = null;\n    if ( this._isLittleEndian ) {\n      for ( let i = 0; i < this._palette.length; i += 1 ) {\n        currentColor = this._palette[i];\n        this._generatedPalette[i] = (\n          ( 255 << 24 ) // a\n          | ( currentColor[2] << 16 ) // b\n          | ( currentColor[1] << 8 ) // g\n          | currentColor[0] // r\n        );\n      }\n    }\n    else {\n      for ( let i = 0; i < this._palette.length; i += 1 ) {\n        currentColor = this._palette[i];\n        this._generatedPalette[i] = (\n          ( currentColor[0] << 24 ) // r\n          | ( currentColor[1] << 16 ) // g\n          | ( currentColor[2] << 8 ) // b\n          | 255 // a\n        );\n      }\n    }\n  }\n\n  /**\n   * Set a pixel on the screen.\n   * The origin (0, 0) of the screen is on the bottom left\n   * @param {number} x - x position\n   * @param {number} y - y position\n   * @param {number} paletteId - palette color index\n   */\n  setPixel( x, y, paletteId ) {\n    if ( !paletteId ) {\n      return;\n    }\n    if ( x < 0 || x >= this.width || y < 0 || y >= this.height ) {\n      return;\n    }\n    this._screenData[y * this.width + x] = paletteId;\n  }\n\n  /**\n   * Set a pixel on the screen, without doing any bounds checking\n   * @param {number} x - x position\n   * @param {number} y - y position\n   * @param {number} paletteId - palette color index\n   */\n  setPixelUnsafe( x, y, paletteId ) {\n    if ( !paletteId ) {\n      return;\n    }\n    this._screenData[y * this.width + x] = paletteId;\n  }\n\n  /**\n   * Get the pallete index at a given position on the screen\n   * @param {*} x - x position\n   * @param {*} y - y position\n   */\n  getPixel( x, y ) {\n    return this._screenData[y * this.width + x];\n  }\n\n  /**\n   * Fill the screen with the given palette index\n   * @param {*} paletteId - the palette index / defaults to 0 if unspecified\n   */\n  clear( paletteId ) {\n    if ( paletteId ) {\n      this._screenData.fill( paletteId );\n    }\n    else {\n      this._screenData.fill( 0 );\n    }\n  }\n\n  /**\n   * Draw a line between 2 positions\n   * @param {*} x1 - first x position\n   * @param {*} y1 - first y position\n   * @param {*} x2 - second x position\n   * @param {*} y2 - second y position\n   * @param {*} paletteId - palette index to be drawn\n   */\n  drawLine( x1, y1, x2, y2, paletteId ) {\n    if ( x1 === x2 && y1 === y2 ) {\n      // same coordinate, draw a pixel\n      this.setPixel( x1, x2, paletteId );\n      return;\n    }\n\n    if ( x1 === x2 ) {\n      // vertical line\n      if ( x1 < 0 || x1 >= this.width ) {\n        return;\n      }\n\n      let firstY = y1 < y2 ? y1 : y2;\n      let secondY = y1 < y2 ? y2 : y1;\n      if ( secondY < 0 ) {\n        return;\n      }\n      if ( firstY >= this.height ) {\n        return;\n      }\n\n      if ( firstY < 0 ) {\n        firstY = 0;\n      }\n      if ( secondY >= this.height ) {\n        secondY = this.height - 1;\n      }\n      for ( let currentY = firstY; currentY <= secondY; currentY += 1 ) {\n        this.setPixelUnsafe( x1, currentY, paletteId );\n      }\n\n      return;\n    }\n\n    if ( y1 === y2 ) {\n      // horizontal line\n      if ( y1 < 0 || y1 >= this.height ) {\n        return;\n      }\n\n      let firstX = x1 < x2 ? x1 : x2;\n      let secondX = x1 < x2 ? x2 : x1;\n      if ( secondX < 0 ) {\n        return;\n      }\n      if ( firstX >= this.width ) {\n        return;\n      }\n\n      if ( firstX < 0 ) {\n        firstX = 0;\n      }\n      if ( secondX >= this.width ) {\n        secondX = this.width - 1;\n      }\n      for ( let currentX = firstX; currentX <= secondX; currentX += 1 ) {\n        this.setPixelUnsafe( currentX, y1, paletteId );\n      }\n\n      return;\n    }\n\n    if ( Math.abs( y2 - y1 ) < Math.abs( x2 - x1 ) ) {\n      // slope is less than 1\n      if ( x1 > x2 ) {\n        this._drawLineLow( x2, y2, x1, y1, paletteId );\n      }\n      else {\n        this._drawLineLow( x1, y1, x2, y2, paletteId );\n      }\n    }\n    else {\n      // slope is greater than 1\n      if ( y1 > y2 ) {\n        this._drawLineHigh( x2, y2, x1, y1, paletteId );\n      }\n      else {\n        this._drawLineHigh( x1, y1, x2, y2, paletteId );\n      }\n    }\n  }\n\n  /**\n   * Draw a line with a slope less than or equal to 1\n   */\n  _drawLineLow( x1, y1, x2, y2, id ) {\n    const dx = x2 - x1;\n    let dy = y2 - y1;\n    let yIncrement = 1;\n    if ( dy < 0 ) {\n      yIncrement = -1;\n      dy = -dy;\n    }\n\n    let decision = 2 * dy - dx;\n    let y = y1;\n\n    for ( let x = x1; x <= x2; x += 1 ) {\n      this.setPixel( x, y, id );\n\n      if ( decision > 0 ) {\n        y += yIncrement;\n        decision = decision - ( 2 * dx );\n      }\n\n      decision = decision + ( 2 * dy );\n    }\n  }\n\n  /**\n   * Draw a line with a slope greater than 1\n   */\n  _drawLineHigh( x1, y1, x2, y2, id ) {\n    let dx = x2 - x1;\n    const dy = y2 - y1;\n    let xIncrement = 1;\n    if ( dx < 0 ) {\n      xIncrement = -1;\n      dx = -dx;\n    }\n\n    let decision = 2 * dx - dy;\n    let x = x1;\n\n    for ( let y = y1; y <= y2; y += 1 ) {\n      this.setPixel( x, y, id );\n\n      if ( decision > 0 ) {\n        x += xIncrement;\n        decision = decision - ( 2 * dy );\n      }\n\n      decision = decision + ( 2 * dx );\n    }\n  }\n\n  /**\n   * Draw a filled rectangle\n   *\n   * @param {*} x - bottom left x position\n   * @param {*} y - bottom left y position\n   * @param {*} width - width of the rectangle\n   * @param {*} height - height of the rectangle\n   * @param {*} paletteId - the palette color to draw\n   */\n  drawRect( x, y, width, height, paletteId ) {\n    if ( x >= this.width ) {\n      return;\n    }\n\n    if ( y >= this.height ) {\n      return;\n    }\n\n    let x1 = x;\n    let y1 = y;\n    let x2 = x + width - 1;\n    let y2 = y + height - 1;\n\n    if ( x2 < 0 ) {\n      return;\n    }\n    if ( y2 < 0 ) {\n      return;\n    }\n\n    if ( x1 < 0 ) {\n      x1 = 0;\n    }\n    if ( y1 < 0 ) {\n      y1 = 0;\n    }\n\n    if ( x2 >= this.width ) {\n      x2 = this.width - 1;\n    }\n\n    if ( y2 >= this.height ) {\n      y2 = this.height - 1;\n    }\n\n    for ( let currentY = y1; currentY <= y2; currentY += 1 ) {\n      for ( let currentX = x1; currentX <= x2; currentX += 1 ) {\n        this.setPixelUnsafe( currentX, currentY, paletteId );\n      }\n    }\n  }\n\n  /**\n   * Draw a rectangle border\n   *\n   * @param {*} x - bottom left x position\n   * @param {*} y - bottom left y position\n   * @param {*} width - width of the rectangle\n   * @param {*} height - height of the rectangle\n   * @param {*} paletteId - the palette color to draw\n   */\n  drawRectBorder( x, y, width, height, paletteId ) {\n    if ( x >= this.width ) {\n      return;\n    }\n\n    if ( y >= this.height ) {\n      return;\n    }\n\n    if ( width === 1 && height === 1 ) {\n      this.setPixel( x, y, paletteId );\n      return;\n    }\n\n    const x2 = x + width - 1;\n    const y2 = y + height - 1;\n\n    if ( x2 < 0 ) {\n      return;\n    }\n    if ( y2 < 0 ) {\n      return;\n    }\n\n    if ( width === 1 ) {\n      this.drawLine( x, y, x, y2, paletteId );\n      return;\n    }\n\n    if ( height === 1 ) {\n      this.drawLine( x, y, x2, y, paletteId );\n      return;\n    }\n\n    this.drawLine( x, y, x, y2, paletteId ); // left\n    this.drawLine( x, y2, x2, y2, paletteId ); // top\n    this.drawLine( x2, y2, x2, y, paletteId ); // right\n    this.drawLine( x2, y, x, y, paletteId ); // bottom\n  }\n\n  /**\n   * Draw a filled circle\n   *\n   * @param {number} centerX - the x coordinate of the center of the circle\n   * @param {numbe} centerY -  the y coordinate of the center of the circle\n   * @param {number} radius - the radius of the circle\n   * @param {number} paletteId - the palette color to draw\n   */\n  drawCircle( centerX, centerY, radius, paletteId ) {\n    if ( radius <= 0 ) {\n      return;\n    }\n\n    if ( radius === 1 ) {\n      this.drawCircleBorder( centerX, centerY, radius, paletteId );\n      this.setPixel( centerX, centerY, paletteId );\n      return;\n    }\n\n    let x = 0;\n    let y = radius;\n    this.drawLine( centerX - radius, centerY, centerX + radius, centerY, paletteId );\n\n    let decision = 3 - 2 * radius;\n\n    while ( y >= x ) {\n      x += 1;\n\n      if ( decision > 0 ) {\n        y -= 1;\n        decision = decision + 4 * ( x - y ) + 10;\n      }\n      else {\n        decision = decision + 4 * x + 6;\n      }\n\n      this._drawCircleFilledOctants( centerX, centerY, x, y, paletteId );\n    }\n  }\n\n  /**\n   * Draw a circle border\n   *\n   * @param {number} centerX - the x coordinate of the center of the circle\n   * @param {numbe} centerY -  the y coordinate of the center of the circle\n   * @param {number} radius - the radius of the circle\n   * @param {number} paletteId - the palette color to draw\n   */\n  drawCircleBorder( centerX, centerY, radius, paletteId ) {\n    if ( radius <= 0 ) {\n      return;\n    }\n\n    let x = 0;\n    let y = radius;\n    this._drawCircleBorderOctants( centerX, centerY, x, y, paletteId );\n\n    let decision = 3 - 2 * radius;\n\n    while ( y >= x ) {\n      x += 1;\n\n      if ( decision > 0 ) {\n        y -= 1;\n        decision = decision + 4 * ( x - y ) + 10;\n      }\n      else {\n        decision = decision + 4 * x + 6;\n      }\n\n      this._drawCircleBorderOctants( centerX, centerY, x, y, paletteId );\n    }\n  }\n\n  /**\n   * helper method for drawing filled circles\n   */\n  _drawCircleFilledOctants( centerX, centerY, x, y, paletteId ) {\n    this.drawLine( centerX - x, centerY + y, centerX + x, centerY + y, paletteId );\n    this.drawLine( centerX - x, centerY - y, centerX + x, centerY - y, paletteId );\n    this.drawLine( centerX - y, centerY + x, centerX + y, centerY + x, paletteId );\n    this.drawLine( centerX - y, centerY - x, centerX + y, centerY - x, paletteId );\n  }\n\n  /**\n   * helper method for drawing circle borders\n   */\n  _drawCircleBorderOctants( centerX, centerY, x, y, paletteId ) {\n    this.setPixel( centerX + x, centerY + y, paletteId );\n    this.setPixel( centerX - x, centerY + y, paletteId );\n    this.setPixel( centerX + x, centerY - y, paletteId );\n    this.setPixel( centerX - x, centerY - y, paletteId );\n    this.setPixel( centerX + y, centerY + x, paletteId );\n    this.setPixel( centerX - y, centerY + x, paletteId );\n    this.setPixel( centerX + y, centerY - x, paletteId );\n    this.setPixel( centerX - y, centerY - x, paletteId );\n  }\n\n  /**\n   * Draw a tile\n   * @param {number} gid - the gid of the tile\n   * @param {*} x - the x position on the screen\n   * @param {*} y - the y position on the screen\n   */\n  drawTile( gid, x, y ) {\n    if ( !gid ) {\n      return;\n    }\n\n    if ( x >= this.width ) {\n      return;\n    }\n\n    if ( y >= this.height ) {\n      return;\n    }\n\n    const { tileSize } = this.tileData;\n\n    if ( x + tileSize < 0 ) {\n      return;\n    }\n\n    if ( y + tileSize < 0 ) {\n      return;\n    }\n\n    const basePosition = ( gid - 1 ) * tileSize * tileSize;\n    for ( let tileY = 0; tileY < tileSize; tileY += 1 ) {\n      for ( let tileX = 0; tileX < tileSize; tileX += 1 ) {\n        const paletteId = this.tileData.data[basePosition + tileY * tileSize + tileX];\n        this.setPixel( x + tileX, y + tileY, paletteId );\n      }\n    }\n  }\n\n  /**\n   * Draw a TileMap layer to the screen\n   * @param {number} x - origin x position on the TileMap\n   * @param {number} y - origin y position on the TileMap\n   * @param {number} width - how many tiles wide to draw\n   * @param {number} height - how many tiles high to draw\n   * @param {number} screenX - origin x position on the screen\n   * @param {number} screenY - origin y position on the screen\n   * @param {number} map - the index of the tilemap to draw\n   * @param {number} layer - the index of the layer to draw\n   */\n  drawMap( x, y, width, height, screenX, screenY, map = 0, layer = 0 ) {\n    const tileMap = this.mapData.tileMaps[map];\n    const layerData = tileMap.layers[layer];\n    const { tileSize } = this.tileData;\n    let maxX = x + width;\n    let maxY = y + height;\n\n    if ( maxX >= tileMap.width ) {\n      maxX = tileMap.width - 1;\n    }\n    if ( maxY >= tileMap.height ) {\n      maxY = tileMap.height - 1;\n    }\n\n    for ( let currentY = y; currentY <= maxY; currentY += 1 ) {\n      for ( let currentX = x; currentX <= maxX; currentX += 1 ) {\n        const gid = layerData[currentY * tileMap.width + currentX];\n        if ( gid ) {\n          this.drawTile( gid, screenX + currentX * tileSize, screenY + currentY * tileSize );\n        }\n      }\n    }\n  }\n\n  /**\n   * Draw a line of text to the screen.\n   * Newlines are not supported, this will draw just a single line\n   * @param {string} text - the text to draw\n   * @param {number} x - the x position on the screen to draw to\n   * @param {number} y - the y position on the screen to draw to\n   * @param {number} paletteId - the palette if for the main color\n   * @param {number} outlinePaletteId - the palette id for the outline color\n   * @param {number} font - the index of the font to use\n   */\n  drawText( text, x, y, paletteId, outlinePaletteId = 0, font = 0 ) {\n    const currentFont = this.fontData.fonts[font];\n    let currentX = x;\n    for ( let i = 0; i < text.length; i += 1 ) {\n      const charCode = text.charCodeAt( i );\n      this.drawChar( charCode, currentX, y, paletteId, outlinePaletteId, font );\n      currentX += currentFont.widthForChar( charCode );\n      currentX += currentFont.letterSpacing;\n    }\n  }\n\n  /**\n   * Draw an individual character to the screen\n   * @param {number} charCode - the unicode point to draw\n   * @param {number} x - the x position on the screen to draw to\n   * @param {number} y - the y position on the screen to draw to\n   * @param {number} paletteId - the palette id for the main color\n   * @param {number} outlinePaletteId - the palette id for the outline color\n   * @param {number} font - the index of the font to use\n   */\n  drawChar( charCode, x, y, paletteId, outlinePaletteId = 0, font = 0 ) {\n    const currentFont = this.fontData.fonts[font];\n    const { tileSize, originX, originY } = currentFont;\n    const basePosition = currentFont.baseIndexForChar( charCode );\n    for ( let fontY = 0; fontY < tileSize; fontY += 1 ) {\n      for ( let fontX = 0; fontX < tileSize; fontX += 1 ) {\n        const id = currentFont.data[basePosition + fontY * tileSize + fontX];\n        if ( id === 1 ) {\n          this.setPixel( x + fontX - originX, y + fontY - originY, paletteId );\n        }\n        else if ( id === 2 ) {\n          this.setPixel( x + fontX - originX, y + fontY - originY, outlinePaletteId );\n        }\n      }\n    }\n  }\n\n  /**\n   * draw the data from {@link _screenData} to the canvas\n   */\n  drawScreen() {\n    const buffer = new ArrayBuffer( this._imageData.data.length );\n    const data8 = new Uint8ClampedArray( buffer );\n    const data32 = new Uint32Array( buffer );\n\n    let index = 0;\n    let screenY = 0;\n    for ( let y = 0; y < this.height; y += 1 ) {\n      for ( let x = 0; x < this.width; x += 1 ) {\n        screenY = this.height - y - 1; // origin from top left to bottom left\n        index = this._screenData[screenY * this.width + x];\n        data32[y * this.width + x] = this._generatedPalette[index];\n      }\n    }\n    this._imageData.data.set( data8 );\n    this._context.putImageData( this._imageData, 0, 0 );\n  }\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Screen);\n\n\n//# sourceURL=webpack://minnow/./src/Screen/Screen.js?");

/***/ }),

/***/ "./src/TileData/TileData.js":
/*!**********************************!*\
  !*** ./src/TileData/TileData.js ***!
  \**********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n\n/**\n * Holds all of the tile data.\n */\nclass TileData {\n  constructor() {\n    this.tileSize = 16;\n    this.tilesets = [];\n    this.data = null;\n  }\n\n  /**\n   * Parse all of the tilesets and add them to the data array\n   */\n  init() {\n    let numberOfTiles = 0;\n    for ( let i = 0; i < this.tilesets.length; i += 1 ) {\n      const currentTileset = this.tilesets[i];\n      numberOfTiles += currentTileset.width * currentTileset.height;\n    }\n    this.data = new Uint8ClampedArray( numberOfTiles * this.tileSize * this.tileSize );\n\n    let startPosition = 0;\n    let firstGid = 1;\n    for ( let i = 0; i < this.tilesets.length; i += 1 ) {\n      const currentTileset = this.tilesets[i];\n      currentTileset.firstGid = firstGid;\n      const { data } = currentTileset;\n      if ( currentTileset.format === 'array' ) {\n        for ( let j = 0; j < data.length; j += 1 ) {\n          this.data[startPosition + j] = parseInt( data[j], 10 );\n        }\n      }\n      else if ( currentTileset.format === 'run' ) {\n        let runPosition = 0;\n        let dataPosition = 0;\n        while ( runPosition < data.length ) {\n          const runLength = data[runPosition];\n          const paletteId = parseInt( data[runPosition + 1], 10 );\n          for ( let j = 0; j < runLength; j += 1 ) {\n            this.data[startPosition + dataPosition] = paletteId;\n            dataPosition += 1;\n          }\n          runPosition += 2;\n        }\n      }\n      firstGid += currentTileset.width * currentTileset.height;\n      startPosition += currentTileset.width * currentTileset.height * this.tileSize * this.tileSize;\n    }\n  }\n\n  /**\n   * Add a tileset\n   * @param {Object} tileset - the tileset data\n   */\n  addTileset( tileset ) {\n    this.tilesets.push( tileset );\n  }\n\n  /**\n   * Get the GID for a tile\n   * @param {number} x - x position of the tile\n   * @param {number} y - y position of the tile\n   * @param {number} tileset - the index of the tileset\n   */\n  getGid( x, y, tileset = 0 ) {\n    if ( x < 0 || y < 0 ) {\n      return -1;\n    }\n    const currentTileset = this.tilesets[tileset];\n    const { width, height, firstGid } = currentTileset;\n    if ( x >= width || y >= height ) {\n      return -1;\n    }\n    return y * width + x + firstGid;\n  }\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (TileData);\n\n\n//# sourceURL=webpack://minnow/./src/TileData/TileData.js?");

/***/ }),

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/*! exports provided: default, Engine, Screen, Input, TileData, MapData, TileMap, Keys */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Keys\", function() { return Keys; });\n/* harmony import */ var _Input_Keys__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Input/Keys */ \"./src/Input/Keys.js\");\n/* harmony import */ var _Engine_Engine__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Engine/Engine */ \"./src/Engine/Engine.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return _Engine_Engine__WEBPACK_IMPORTED_MODULE_1__[\"default\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"Engine\", function() { return _Engine_Engine__WEBPACK_IMPORTED_MODULE_1__[\"default\"]; });\n\n/* harmony import */ var _Screen_Screen__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Screen/Screen */ \"./src/Screen/Screen.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"Screen\", function() { return _Screen_Screen__WEBPACK_IMPORTED_MODULE_2__[\"default\"]; });\n\n/* harmony import */ var _Input_Input__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Input/Input */ \"./src/Input/Input.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"Input\", function() { return _Input_Input__WEBPACK_IMPORTED_MODULE_3__[\"default\"]; });\n\n/* harmony import */ var _TileData_TileData__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./TileData/TileData */ \"./src/TileData/TileData.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"TileData\", function() { return _TileData_TileData__WEBPACK_IMPORTED_MODULE_4__[\"default\"]; });\n\n/* harmony import */ var _MapData_MapData__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./MapData/MapData */ \"./src/MapData/MapData.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"MapData\", function() { return _MapData_MapData__WEBPACK_IMPORTED_MODULE_5__[\"default\"]; });\n\n/* harmony import */ var _MapData_TileMap__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./MapData/TileMap */ \"./src/MapData/TileMap.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"TileMap\", function() { return _MapData_TileMap__WEBPACK_IMPORTED_MODULE_6__[\"default\"]; });\n\n\n\n\n\n\n\n\n\n\n\n\nconst Keys = _Input_Keys__WEBPACK_IMPORTED_MODULE_0__;\n\n\n//# sourceURL=webpack://minnow/./src/index.js?");

/***/ })

/******/ });
});